[0.000000] (-) TimerEvent: {}
[0.000303] (-) JobUnselected: {'identifier': 'direct_dynamic_controller'}
[0.000671] (-) JobUnselected: {'identifier': 'joint_trajectory_controller'}
[0.000735] (-) JobUnselected: {'identifier': 'march_acado_mpc'}
[0.000763] (-) JobUnselected: {'identifier': 'march_bridge_parameters'}
[0.000808] (-) JobUnselected: {'identifier': 'march_data_collector'}
[0.000834] (-) JobUnselected: {'identifier': 'march_description'}
[0.000869] (-) JobUnselected: {'identifier': 'march_gain_scheduling'}
[0.001844] (-) JobUnselected: {'identifier': 'march_gazebo_plugins'}
[0.001988] (-) JobUnselected: {'identifier': 'march_hardware'}
[0.002040] (-) JobUnselected: {'identifier': 'march_hardware_builder'}
[0.002168] (-) JobUnselected: {'identifier': 'march_hardware_interface'}
[0.002212] (-) JobUnselected: {'identifier': 'march_imu_manager'}
[0.002238] (-) JobUnselected: {'identifier': 'march_joint_inertia_controller'}
[0.002271] (-) JobUnselected: {'identifier': 'march_launch'}
[0.002304] (-) JobUnselected: {'identifier': 'march_moveit'}
[0.002329] (-) JobUnselected: {'identifier': 'march_moveit_interface'}
[0.002362] (-) JobUnselected: {'identifier': 'march_parameter_server'}
[0.002435] (-) JobUnselected: {'identifier': 'march_pdb_state_controller'}
[0.002497] (-) JobUnselected: {'identifier': 'march_realsense_reader'}
[0.002529] (-) JobUnselected: {'identifier': 'march_rqt_gait_generator'}
[0.002640] (-) JobUnselected: {'identifier': 'march_shared_classes'}
[0.002679] (-) JobUnselected: {'identifier': 'march_shared_msgs'}
[0.002703] (-) JobUnselected: {'identifier': 'march_simulation'}
[0.002751] (-) JobUnselected: {'identifier': 'march_temperature_sensor_controller'}
[0.002776] (-) JobUnselected: {'identifier': 'realsense_gazebo_plugin'}
[0.002856] (computed_torque) JobQueued: {'identifier': 'computed_torque', 'dependencies': OrderedDict([('joint_trajectory_controller', '/home/sheila/march/ros1/install/joint_trajectory_controller')])}
[0.002929] (computed_torque) JobStarted: {'identifier': 'computed_torque'}
[0.023827] (computed_torque) JobProgress: {'identifier': 'computed_torque', 'progress': 'cmake'}
[0.025658] (computed_torque) JobProgress: {'identifier': 'computed_torque', 'progress': 'build'}
[0.026590] (computed_torque) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/sheila/march/ros1/build/computed_torque', '--', '-j4', '-l4'], 'cwd': '/home/sheila/march/ros1/build/computed_torque', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'es:en'), ('USER', 'sheila'), ('LC_TIME', 'es_ES.UTF-8'), ('SSH_AGENT_PID', '1812'), ('ROS_PACKAGE_PATH', '/home/sheila/march/ros1/install/joint_trajectory_controller/share:/home/sheila/march/ros1/install/realsense_gazebo_plugin/share:/home/sheila/march/ros1/install/march_temperature_sensor_controller/share:/home/sheila/march/ros1/install/march_launch/share:/home/sheila/march/ros1/install/march_simulation/share:/home/sheila/march/ros1/install/march_rqt_gait_generator/share:/home/sheila/march/ros1/install/march_shared_classes/share:/home/sheila/march/ros1/install/march_realsense_reader/share:/home/sheila/march/ros1/install/march_pdb_state_controller/share:/home/sheila/march/ros1/install/march_parameter_server/share:/home/sheila/march/ros1/install/march_moveit_interface/share:/home/sheila/march/ros1/install/march_joint_inertia_controller/share:/home/sheila/march/ros1/install/march_hardware_interface/share:/home/sheila/march/ros1/install/march_gazebo_plugins/share:/home/sheila/march/ros1/install/march_gain_scheduling/share:/home/sheila/march/ros1/install/march_data_collector/share:/home/sheila/march/ros1/install/march_acado_mpc/share:/home/sheila/march/ros1/install/march_shared_msgs/share:/home/sheila/march/ros1/install/march_moveit/share:/home/sheila/march/ros1/install/march_imu_manager/share:/home/sheila/march/ros1/install/march_hardware_builder/share:/home/sheila/march/ros1/install/march_hardware/share:/home/sheila/march/ros1/install/march_description/share:/home/sheila/march/ros1/install/march_bridge_parameters/share:/home/sheila/march/ros1/install/computed_torque/share:/home/sheila/march/ros1/install/direct_dynamic_controller/share:/opt/ros/noetic/share'), ('XDG_SESSION_TYPE', 'x11'), ('ROS_ETC_DIR', '/opt/ros/noetic/etc/ros'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/sheila/march/ros1/install/joint_trajectory_controller/lib:/home/sheila/march/ros1/install/realsense_gazebo_plugin/lib:/home/sheila/march/ros1/install/march_temperature_sensor_controller/lib:/home/sheila/march/ros1/install/march_realsense_reader/lib:/home/sheila/march/ros1/install/march_pdb_state_controller/lib:/home/sheila/march/ros1/install/march_joint_inertia_controller/lib:/home/sheila/march/ros1/install/march_gazebo_plugins/lib:/home/sheila/march/ros1/install/march_acado_mpc/lib:/home/sheila/march/ros1/install/march_imu_manager/lib:/home/sheila/march/ros1/install/march_hardware_builder/lib:/home/sheila/march/ros1/install/march_hardware/lib:/home/sheila/march/ros1/install/direct_dynamic_controller/lib:/opt/ros/noetic/lib:/opt/ros/noetic/lib/x86_64-linux-gnu'), ('HOME', '/home/sheila'), ('OLDPWD', '/home/sheila'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'es_ES.UTF-8'), ('MANAGERPID', '1416'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/sheila/march/ros1/install'), ('ROS_DISTRO', 'noetic'), ('LOGNAME', 'sheila'), ('JOURNAL_STREAM', '8:42796'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '1'), ('PKG_CONFIG_PATH', '/home/sheila/march/ros1/install/joint_trajectory_controller/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/joint_trajectory_controller/lib/pkgconfig:/home/sheila/march/ros1/install/realsense_gazebo_plugin/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/realsense_gazebo_plugin/lib/pkgconfig:/home/sheila/march/ros1/install/march_temperature_sensor_controller/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_temperature_sensor_controller/lib/pkgconfig:/home/sheila/march/ros1/install/march_launch/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_launch/lib/pkgconfig:/home/sheila/march/ros1/install/march_simulation/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_simulation/lib/pkgconfig:/home/sheila/march/ros1/install/march_rqt_gait_generator/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_rqt_gait_generator/lib/pkgconfig:/home/sheila/march/ros1/install/march_shared_classes/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_shared_classes/lib/pkgconfig:/home/sheila/march/ros1/install/march_realsense_reader/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_realsense_reader/lib/pkgconfig:/home/sheila/march/ros1/install/march_pdb_state_controller/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_pdb_state_controller/lib/pkgconfig:/home/sheila/march/ros1/install/march_parameter_server/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_parameter_server/lib/pkgconfig:/home/sheila/march/ros1/install/march_moveit_interface/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_moveit_interface/lib/pkgconfig:/home/sheila/march/ros1/install/march_joint_inertia_controller/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_joint_inertia_controller/lib/pkgconfig:/home/sheila/march/ros1/install/march_hardware_interface/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_hardware_interface/lib/pkgconfig:/home/sheila/march/ros1/install/march_gazebo_plugins/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_gazebo_plugins/lib/pkgconfig:/home/sheila/march/ros1/install/march_gain_scheduling/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_gain_scheduling/lib/pkgconfig:/home/sheila/march/ros1/install/march_data_collector/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_data_collector/lib/pkgconfig:/home/sheila/march/ros1/install/march_acado_mpc/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_acado_mpc/lib/pkgconfig:/home/sheila/march/ros1/install/march_shared_msgs/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_shared_msgs/lib/pkgconfig:/home/sheila/march/ros1/install/march_moveit/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_moveit/lib/pkgconfig:/home/sheila/march/ros1/install/march_imu_manager/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_imu_manager/lib/pkgconfig:/home/sheila/march/ros1/install/march_hardware_builder/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_hardware_builder/lib/pkgconfig:/home/sheila/march/ros1/install/march_hardware/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_hardware/lib/pkgconfig:/home/sheila/march/ros1/install/march_description/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_description/lib/pkgconfig:/home/sheila/march/ros1/install/march_bridge_parameters/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/march_bridge_parameters/lib/pkgconfig:/home/sheila/march/ros1/install/computed_torque/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/computed_torque/lib/pkgconfig:/home/sheila/march/ros1/install/direct_dynamic_controller/lib/x86_64-linux-gnu/pkgconfig:/home/sheila/march/ros1/install/direct_dynamic_controller/lib/pkgconfig:/opt/ros/noetic/lib/pkgconfig:/opt/ros/noetic/lib/x86_64-linux-gnu/pkgconfig'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'sheila'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/home/sheila/march/ros1/install/march_rqt_gait_generator/bin:/home/sheila/march/ros1/install/march_parameter_server/bin:/home/sheila/march/ros1/install/march_moveit_interface/bin:/home/sheila/march/ros1/install/march_gain_scheduling/bin:/home/sheila/march/ros1/install/march_data_collector/bin:/opt/ros/noetic/bin:/home/sheila/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/sheila-X555LDB:@/tmp/.ICE-unix/1855,unix/sheila-X555LDB:/tmp/.ICE-unix/1855'), ('INVOCATION_ID', '3b06f7c7b9b1482a8bcfc4fa6834ca25'), ('PAPERSIZE', 'a4'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'es_ES.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/4c26cc3a_bcd3_41b6_9bb8_de62e6e33816'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'es_ES.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'es_ES.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('ROSLISP_PACKAGE_DIRECTORIES', ''), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.82'), ('ROS_ROOT', '/opt/ros/noetic/share/ros'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('SHELL', '/bin/bash'), ('LC_NAME', 'es_ES.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('ROS_MASTER_URI', 'http://localhost:11311'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'es_ES.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'es_ES.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/sheila/march/ros1/build/computed_torque'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/sheila/march/ros1/install/march_rqt_gait_generator/lib/python3/dist-packages:/home/sheila/march/ros1/install/march_shared_classes/lib/python3/dist-packages:/home/sheila/march/ros1/install/march_parameter_server/lib/python3/dist-packages:/home/sheila/march/ros1/install/march_moveit_interface/lib/python3/dist-packages:/home/sheila/march/ros1/install/march_gain_scheduling/lib/python3/dist-packages:/home/sheila/march/ros1/install/march_data_collector/lib/python3/dist-packages:/home/sheila/march/ros1/install/march_shared_msgs/lib/python3/dist-packages:/opt/ros/noetic/lib/python3/dist-packages'), ('LC_NUMERIC', 'es_ES.UTF-8'), ('LC_PAPER', 'es_ES.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/home/sheila/march/ros1/install/joint_trajectory_controller:/home/sheila/march/ros1/install/realsense_gazebo_plugin:/home/sheila/march/ros1/install/march_temperature_sensor_controller:/home/sheila/march/ros1/install/march_launch:/home/sheila/march/ros1/install/march_simulation:/home/sheila/march/ros1/install/march_rqt_gait_generator:/home/sheila/march/ros1/install/march_shared_classes:/home/sheila/march/ros1/install/march_realsense_reader:/home/sheila/march/ros1/install/march_pdb_state_controller:/home/sheila/march/ros1/install/march_parameter_server:/home/sheila/march/ros1/install/march_moveit_interface:/home/sheila/march/ros1/install/march_joint_inertia_controller:/home/sheila/march/ros1/install/march_hardware_interface:/home/sheila/march/ros1/install/march_gazebo_plugins:/home/sheila/march/ros1/install/march_gain_scheduling:/home/sheila/march/ros1/install/march_data_collector:/home/sheila/march/ros1/install/march_acado_mpc:/home/sheila/march/ros1/install/march_shared_msgs:/home/sheila/march/ros1/install/march_moveit:/home/sheila/march/ros1/install/march_imu_manager:/home/sheila/march/ros1/install/march_hardware_builder:/home/sheila/march/ros1/install/march_hardware:/home/sheila/march/ros1/install/march_description:/home/sheila/march/ros1/install/march_bridge_parameters:/home/sheila/march/ros1/install/direct_dynamic_controller:/opt/ros/noetic')]), 'shell': False}
[0.099189] (-) TimerEvent: {}
[0.128151] (computed_torque) StdoutLine: {'line': b'[  0%] Built target sensor_msgs_generate_messages_nodejs\n'}
[0.128612] (computed_torque) StdoutLine: {'line': b'[  0%] Built target dynamic_reconfigure_generate_messages_nodejs\n'}
[0.129852] (computed_torque) StdoutLine: {'line': b'[  0%] Built target sensor_msgs_generate_messages_cpp\n'}
[0.135716] (computed_torque) StdoutLine: {'line': b'[  0%] Built target sensor_msgs_generate_messages_py\n'}
[0.168116] (computed_torque) StdoutLine: {'line': b'[  0%] Built target march_shared_msgs_generate_messages_py\n'}
[0.171719] (computed_torque) StdoutLine: {'line': b'[  0%] Built target march_shared_msgs_generate_messages_eus\n'}
[0.172049] (computed_torque) StdoutLine: {'line': b'[  0%] Built target march_shared_msgs_generate_messages_nodejs\n'}
[0.175478] (computed_torque) StdoutLine: {'line': b'[  0%] Built target roscpp_generate_messages_eus\n'}
[0.199313] (-) TimerEvent: {}
[0.207708] (computed_torque) StdoutLine: {'line': b'[  0%] Built target roscpp_generate_messages_cpp\n'}
[0.210382] (computed_torque) StdoutLine: {'line': b'[  0%] Built target std_msgs_generate_messages_py\n'}
[0.214945] (computed_torque) StdoutLine: {'line': b'[  0%] Built target march_shared_msgs_generate_messages_cpp\n'}
[0.215363] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_toolbox_gencfg\n'}
[0.248118] (computed_torque) StdoutLine: {'line': b'[  0%] Built target std_msgs_generate_messages_nodejs\n'}
[0.250099] (computed_torque) StdoutLine: {'line': b'[  0%] Built target geometry_msgs_generate_messages_eus\n'}
[0.256561] (computed_torque) StdoutLine: {'line': b'[  0%] Built target roscpp_generate_messages_nodejs\n'}
[0.258097] (computed_torque) StdoutLine: {'line': b'[  0%] Built target std_msgs_generate_messages_cpp\n'}
[0.284516] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_msgs_generate_messages_py\n'}
[0.291465] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_generate_messages_cpp\n'}
[0.296914] (computed_torque) StdoutLine: {'line': b'[  0%] Built target march_shared_msgs_generate_messages_lisp\n'}
[0.299416] (-) TimerEvent: {}
[0.301244] (computed_torque) StdoutLine: {'line': b'[  0%] Built target rosgraph_msgs_generate_messages_nodejs\n'}
[0.328879] (computed_torque) StdoutLine: {'line': b'[  0%] Built target rosgraph_msgs_generate_messages_lisp\n'}
[0.330678] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_generate_messages_py\n'}
[0.336804] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_generate_messages_lisp\n'}
[0.338305] (computed_torque) StdoutLine: {'line': b'[  0%] Built target _catkin_empty_exported_target\n'}
[0.373400] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_generate_messages_nodejs\n'}
[0.375268] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_msgs_generate_messages_eus\n'}
[0.375575] (computed_torque) StdoutLine: {'line': b'[  0%] Built target trajectory_msgs_generate_messages_nodejs\n'}
[0.380017] (computed_torque) StdoutLine: {'line': b'[  0%] Built target trajectory_msgs_generate_messages_cpp\n'}
[0.399540] (-) TimerEvent: {}
[0.415140] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_toolbox_generate_messages_py\n'}
[0.415570] (computed_torque) StdoutLine: {'line': b'[  0%] Built target rosgraph_msgs_generate_messages_py\n'}
[0.415869] (computed_torque) StdoutLine: {'line': b'[  0%] Built target std_msgs_generate_messages_eus\n'}
[0.418276] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_msgs_generate_messages_nodejs\n'}
[0.455619] (computed_torque) StdoutLine: {'line': b'[  0%] Built target rosgraph_msgs_generate_messages_eus\n'}
[0.456076] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_msgs_generate_messages_lisp\n'}
[0.456284] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_msgs_generate_messages_cpp\n'}
[0.457992] (computed_torque) StdoutLine: {'line': b'[  0%] Built target sensor_msgs_generate_messages_lisp\n'}
[0.494110] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_msgs_generate_messages_cpp\n'}
[0.494433] (computed_torque) StdoutLine: {'line': b'[  0%] Built target sensor_msgs_generate_messages_eus\n'}
[0.494625] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_msgs_generate_messages_lisp\n'}
[0.499640] (computed_torque) StdoutLine: {'line': b'[  0%] Built target std_msgs_generate_messages_lisp\n'}
[0.499939] (-) TimerEvent: {}
[0.532390] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_toolbox_generate_messages_nodejs\n'}
[0.532714] (computed_torque) StdoutLine: {'line': b'[  0%] Built target roscpp_generate_messages_lisp\n'}
[0.536534] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_msgs_generate_messages_eus\n'}
[0.541066] (computed_torque) StdoutLine: {'line': b'[  0%] Built target dynamic_reconfigure_generate_messages_py\n'}
[0.569931] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_msgs_generate_messages_py\n'}
[0.572393] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_msgs_generate_messages_nodejs\n'}
[0.575549] (computed_torque) StdoutLine: {'line': b'[  0%] Built target geometry_msgs_generate_messages_cpp\n'}
[0.588834] (computed_torque) StdoutLine: {'line': b'[  0%] Built target geometry_msgs_generate_messages_lisp\n'}
[0.600066] (-) TimerEvent: {}
[0.606196] (computed_torque) StdoutLine: {'line': b'[  0%] Built target trajectory_msgs_generate_messages_lisp\n'}
[0.619313] (computed_torque) StdoutLine: {'line': b'[  0%] Built target rosgraph_msgs_generate_messages_cpp\n'}
[0.626568] (computed_torque) StdoutLine: {'line': b'[  0%] Built target geometry_msgs_generate_messages_py\n'}
[0.629026] (computed_torque) StdoutLine: {'line': b'[  0%] Built target actionlib_generate_messages_eus\n'}
[0.647679] (computed_torque) StdoutLine: {'line': b'[  0%] Built target trajectory_msgs_generate_messages_py\n'}
[0.659789] (computed_torque) StdoutLine: {'line': b'[  0%] Built target trajectory_msgs_generate_messages_eus\n'}
[0.670125] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_toolbox_generate_messages_cpp\n'}
[0.679016] (computed_torque) StdoutLine: {'line': b'[  0%] Built target roscpp_generate_messages_py\n'}
[0.686344] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_toolbox_generate_messages_eus\n'}
[0.698075] (computed_torque) StdoutLine: {'line': b'[  0%] Built target control_toolbox_generate_messages_lisp\n'}
[0.700177] (-) TimerEvent: {}
[0.715222] (computed_torque) StdoutLine: {'line': b'[  0%] Built target dynamic_reconfigure_generate_messages_cpp\n'}
[0.718138] (computed_torque) StdoutLine: {'line': b'[  0%] Built target geometry_msgs_generate_messages_nodejs\n'}
[0.725306] (computed_torque) StdoutLine: {'line': b'[  0%] Built target dynamic_reconfigure_generate_messages_eus\n'}
[0.737099] (computed_torque) StdoutLine: {'line': b'[  0%] Built target dynamic_reconfigure_gencfg\n'}
[0.750939] (computed_torque) StdoutLine: {'line': b'[  0%] Built target dynamic_reconfigure_generate_messages_lisp\n'}
[0.768409] (computed_torque) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target computed_torque_lib\x1b[0m\n'}
[0.799637] (computed_torque) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/computed_torque_lib.dir/src/computed_torque_controller.cpp.o\x1b[0m\n'}
[0.800270] (-) TimerEvent: {}
[0.900621] (-) TimerEvent: {}
[1.001096] (-) TimerEvent: {}
[1.101504] (-) TimerEvent: {}
[1.201820] (-) TimerEvent: {}
[1.302163] (-) TimerEvent: {}
[1.402570] (-) TimerEvent: {}
[1.502894] (-) TimerEvent: {}
[1.603233] (-) TimerEvent: {}
[1.703566] (-) TimerEvent: {}
[1.803911] (-) TimerEvent: {}
[1.904337] (-) TimerEvent: {}
[2.004651] (-) TimerEvent: {}
[2.105001] (-) TimerEvent: {}
[2.205331] (-) TimerEvent: {}
[2.305679] (-) TimerEvent: {}
[2.406016] (-) TimerEvent: {}
[2.506354] (-) TimerEvent: {}
[2.606693] (-) TimerEvent: {}
[2.707059] (-) TimerEvent: {}
[2.807405] (-) TimerEvent: {}
[2.907749] (-) TimerEvent: {}
[3.008041] (-) TimerEvent: {}
[3.108345] (-) TimerEvent: {}
[3.208647] (-) TimerEvent: {}
[3.308961] (-) TimerEvent: {}
[3.409262] (-) TimerEvent: {}
[3.509574] (-) TimerEvent: {}
[3.609859] (-) TimerEvent: {}
[3.710228] (-) TimerEvent: {}
[3.810535] (-) TimerEvent: {}
[3.910837] (-) TimerEvent: {}
[4.011132] (-) TimerEvent: {}
[4.111436] (-) TimerEvent: {}
[4.211748] (-) TimerEvent: {}
[4.257756] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.257986] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:32:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinclude\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[4.258091] (computed_torque) StderrLine: {'line': b'   32 | \x1b[01;31m\x1b[Kinclude\x1b[m\x1b[K <trajectory_interface/joint_trajectory_segment.h>\n'}
[4.258185] (computed_torque) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.258768] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.258979] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.259069] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.259156] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.259239] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:148:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.259319] (computed_torque) StderrLine: {'line': b'  148 | inline bool Equal(const Vector& a,const Vector& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.259397] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.259474] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:148:62:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.259551] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.259629] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.259843] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.259931] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.260011] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.260090] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.260169] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.260248] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.260325] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.260402] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.260481] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.260809] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.260953] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.261089] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.261221] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.261503] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.261662] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:149:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.261803] (computed_torque) StderrLine: {'line': b'  149 | inline bool Equal(const Frame& a,const Frame& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.261931] (computed_torque) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.262060] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:149:60:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.262328] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.262463] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.262590] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.262714] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.262881] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.263184] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.263318] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.263448] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.263583] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.263853] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.264017] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.264182] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.264334] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.264485] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.264621] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.264749] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.264875] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:150:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.265008] (computed_torque) StderrLine: {'line': b'  150 | inline bool Equal(const Twist& a,const Twist& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.265132] (computed_torque) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.265405] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:150:60:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.265524] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.265613] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.265695] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.265776] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.265854] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.265932] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.266009] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.266093] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.266172] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.266250] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.266329] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.266407] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.266485] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.266562] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.266639] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.266718] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.266925] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:151:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.267014] (computed_torque) StderrLine: {'line': b'  151 | inline bool Equal(const Wrench& a,const Wrench& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.267101] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.267188] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:151:62:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.267277] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.267466] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.267652] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.267742] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.267820] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.267899] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.267978] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.268056] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.268140] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.268217] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.268296] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.268603] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.268768] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.268915] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.269056] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.269206] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.269359] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:152:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.269454] (computed_torque) StderrLine: {'line': b'  152 | inline bool Equal(const Vector2& a,const Vector2& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.269570] (computed_torque) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.269648] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:152:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.269726] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.269803] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.269880] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.269959] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.270046] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.270124] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.270201] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.270278] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.270355] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.270431] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.270509] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.270585] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.270661] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.270737] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.270813] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.270891] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.270968] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:153:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.271045] (computed_torque) StderrLine: {'line': b'  153 | inline bool Equal(const Rotation2& a,const Rotation2& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.271127] (computed_torque) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.271204] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:153:68:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.271281] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.271357] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.271439] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.271807] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.271917] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.272004] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.272086] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.272180] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.272260] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.272338] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.272419] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.272503] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.272582] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.272662] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.272740] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.272821] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.272900] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.272979] (computed_torque) StderrLine: {'line': b'  154 | inline bool Equal(const Frame2& a,const Frame2& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.273057] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.273134] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:62:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.273212] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.273288] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.273366] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.273443] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.273594] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.273680] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.273770] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.273887] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.274043] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.274167] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.274261] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.274342] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.274421] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.274500] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.274579] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.274663] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.274742] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:237:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.274826] (computed_torque) StderrLine: {'line': b'  237 |      double Normalize(double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.274904] (computed_torque) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.274981] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:237:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.275058] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.275136] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.275213] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.275291] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.275367] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.275446] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.275524] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.275602] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.275686] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.275764] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.275842] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.275925] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.276001] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.276081] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.276158] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.276236] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.276313] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:387:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.276390] (computed_torque) StderrLine: {'line': b'  387 |  double GetRotAngle(Vector& axis,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K) const;\n'}
[4.276468] (computed_torque) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.276545] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:387:45:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.276622] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.276699] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.276777] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.276853] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.276930] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.277006] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.277082] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.277160] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.277236] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.277313] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.277390] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.277512] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.277605] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.277684] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.277762] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.277841] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.277926] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.278005] (computed_torque) StderrLine: {'line': b'  557 |     bool Equal(const Rotation& a,const Rotation& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.278084] (computed_torque) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.278161] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:63:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.278238] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.278316] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.278394] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.278471] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.278548] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.278625] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.278703] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.278781] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.278864] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.278942] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.279025] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.279104] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.279186] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.279263] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.279341] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.279417] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.279494] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1015:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.279582] (computed_torque) StderrLine: {'line': b' 1015 |      double Normalize(double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.279659] (computed_torque) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.279735] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1015:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.279816] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.279893] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.279969] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.280046] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.280123] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.280200] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.280278] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.280354] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.280430] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.280511] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.280588] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.280664] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.283432] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.283583] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.283679] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.283768] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.283952] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.284142] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::Frame::Integrate(const KDL::Twist&, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.284241] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:622:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.284325] (computed_torque) StderrLine: {'line': b'  622 |     if (n<\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K) {\n'}
[4.284405] (computed_torque) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.284484] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:622:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.284570] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.284661] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.284740] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.284819] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.284897] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.284974] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.285051] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.285132] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.285208] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.285283] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.285360] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.285441] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.289165] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.289746] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.290590] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.290956] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.291062] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.291584] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector&, const KDL::Vector&, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.292189] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1026:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KEqual(const double&, const double&, double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.292805] (computed_torque) StderrLine: {'line': b' 1026 |         return (Equal(a.data[0],b.data[0],eps\x1b[01;31m\x1b[K)\x1b[m\x1b[K&&\n'}
[4.293131] (computed_torque) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.293225] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector&, const KDL::Vector&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.293320] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector& a,const Vector& b,double eps) {\n'}
[4.293411] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.293644] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.293733] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector& a\x1b[m\x1b[K,const Vector& b,double eps) {\n'}
[4.293813] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.293892] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.293970] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.294047] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.294124] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.294202] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:706:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame&, const KDL::Frame&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.294279] (computed_torque) StderrLine: {'line': b'  706 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame& a,const Frame& b,double eps);\n'}
[4.294357] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.294434] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:149:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.294512] (computed_torque) StderrLine: {'line': b'  149 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame& a\x1b[m\x1b[K,const Frame& b,double eps=epsilon);\n'}
[4.294590] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.294668] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:781:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Twist&, const KDL::Twist&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.294746] (computed_torque) StderrLine: {'line': b'  781 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Twist& a,const Twist& b,double eps);\n'}
[4.294824] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.294902] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:150:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.295187] (computed_torque) StderrLine: {'line': b'  150 | inline bool Equal(\x1b[01;36m\x1b[Kconst Twist& a\x1b[m\x1b[K,const Twist& b,double eps=epsilon);\n'}
[4.295279] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.295766] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:944:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Wrench&, const KDL::Wrench&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.296054] (computed_torque) StderrLine: {'line': b'  944 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Wrench& a,const Wrench& b,double eps);\n'}
[4.296401] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.296637] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:151:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.297022] (computed_torque) StderrLine: {'line': b'  151 | inline bool Equal(\x1b[01;36m\x1b[Kconst Wrench& a\x1b[m\x1b[K,const Wrench& b,double eps=epsilon);\n'}
[4.297115] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.297206] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1037:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector2&, const KDL::Vector2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.297534] (computed_torque) StderrLine: {'line': b' 1037 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector2& a,const Vector2& b,double eps);\n'}
[4.297617] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.297695] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:152:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.297773] (computed_torque) StderrLine: {'line': b'  152 | inline bool Equal(\x1b[01;36m\x1b[Kconst Vector2& a\x1b[m\x1b[K,const Vector2& b,double eps=epsilon);\n'}
[4.297849] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.297925] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1089:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation2&, const KDL::Rotation2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.298002] (computed_torque) StderrLine: {'line': b' 1089 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation2& a,const Rotation2& b,double eps);\n'}
[4.298079] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.298154] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:153:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.298236] (computed_torque) StderrLine: {'line': b'  153 | inline bool Equal(\x1b[01;36m\x1b[Kconst Rotation2& a\x1b[m\x1b[K,const Rotation2& b,double eps=epsilon);\n'}
[4.298315] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.298392] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1130:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame2&, const KDL::Frame2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.298470] (computed_torque) StderrLine: {'line': b' 1130 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame2& a,const Frame2& b,double eps);\n'}
[4.298546] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.298622] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.298704] (computed_torque) StderrLine: {'line': b'  154 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame2& a\x1b[m\x1b[K,const Frame2& b,double eps=epsilon);\n'}
[4.298780] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.298856] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation&, const KDL::Rotation&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.298965] (computed_torque) StderrLine: {'line': b'  557 |     bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation& a,const Rotation& b,double eps=epsilon);\n'}
[4.299047] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.299122] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:547:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.299199] (computed_torque) StderrLine: {'line': b'  547 |      friend bool Equal(\x1b[01;36m\x1b[Kconst Rotation& a\x1b[m\x1b[K,const Rotation& b,double eps);\n'}
[4.299274] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.299350] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.299426] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.299501] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.299578] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.299655] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.299731] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1027:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KEqual(const double&, const double&, double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.299809] (computed_torque) StderrLine: {'line': b' 1027 |                 Equal(a.data[1],b.data[1],eps\x1b[01;31m\x1b[K)\x1b[m\x1b[K&&\n'}
[4.299885] (computed_torque) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.299960] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector&, const KDL::Vector&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.300036] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector& a,const Vector& b,double eps) {\n'}
[4.300120] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.300196] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.300272] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector& a\x1b[m\x1b[K,const Vector& b,double eps) {\n'}
[4.300348] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.300428] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.300508] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.300583] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.300659] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.300735] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:706:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame&, const KDL::Frame&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.300811] (computed_torque) StderrLine: {'line': b'  706 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame& a,const Frame& b,double eps);\n'}
[4.300887] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.300963] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:149:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.301044] (computed_torque) StderrLine: {'line': b'  149 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame& a\x1b[m\x1b[K,const Frame& b,double eps=epsilon);\n'}
[4.301119] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.301195] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:781:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Twist&, const KDL::Twist&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.301270] (computed_torque) StderrLine: {'line': b'  781 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Twist& a,const Twist& b,double eps);\n'}
[4.301346] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.301421] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:150:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.301535] (computed_torque) StderrLine: {'line': b'  150 | inline bool Equal(\x1b[01;36m\x1b[Kconst Twist& a\x1b[m\x1b[K,const Twist& b,double eps=epsilon);\n'}
[4.301616] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.301693] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:944:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Wrench&, const KDL::Wrench&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.301770] (computed_torque) StderrLine: {'line': b'  944 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Wrench& a,const Wrench& b,double eps);\n'}
[4.301848] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.301925] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:151:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.302003] (computed_torque) StderrLine: {'line': b'  151 | inline bool Equal(\x1b[01;36m\x1b[Kconst Wrench& a\x1b[m\x1b[K,const Wrench& b,double eps=epsilon);\n'}
[4.302084] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.302160] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1037:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector2&, const KDL::Vector2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.302237] (computed_torque) StderrLine: {'line': b' 1037 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector2& a,const Vector2& b,double eps);\n'}
[4.302312] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.302387] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:152:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.302463] (computed_torque) StderrLine: {'line': b'  152 | inline bool Equal(\x1b[01;36m\x1b[Kconst Vector2& a\x1b[m\x1b[K,const Vector2& b,double eps=epsilon);\n'}
[4.302538] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.302614] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1089:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation2&, const KDL::Rotation2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.302690] (computed_torque) StderrLine: {'line': b' 1089 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation2& a,const Rotation2& b,double eps);\n'}
[4.302766] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.302841] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:153:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.302918] (computed_torque) StderrLine: {'line': b'  153 | inline bool Equal(\x1b[01;36m\x1b[Kconst Rotation2& a\x1b[m\x1b[K,const Rotation2& b,double eps=epsilon);\n'}
[4.302998] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.303074] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1130:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame2&, const KDL::Frame2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.303150] (computed_torque) StderrLine: {'line': b' 1130 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame2& a,const Frame2& b,double eps);\n'}
[4.303226] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.303306] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.303382] (computed_torque) StderrLine: {'line': b'  154 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame2& a\x1b[m\x1b[K,const Frame2& b,double eps=epsilon);\n'}
[4.303457] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.303532] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation&, const KDL::Rotation&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.303612] (computed_torque) StderrLine: {'line': b'  557 |     bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation& a,const Rotation& b,double eps=epsilon);\n'}
[4.303691] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.303766] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:547:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.303843] (computed_torque) StderrLine: {'line': b'  547 |      friend bool Equal(\x1b[01;36m\x1b[Kconst Rotation& a\x1b[m\x1b[K,const Rotation& b,double eps);\n'}
[4.303919] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.303996] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.304072] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.304148] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.304225] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.304302] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.304379] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1028:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KEqual(const double&, const double&, double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.304455] (computed_torque) StderrLine: {'line': b' 1028 |                 Equal(a.data[2],b.data[2],eps\x1b[01;31m\x1b[K)\x1b[m\x1b[K   );\n'}
[4.304531] (computed_torque) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.304606] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector&, const KDL::Vector&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.304683] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector& a,const Vector& b,double eps) {\n'}
[4.304758] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.304835] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.304912] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector& a\x1b[m\x1b[K,const Vector& b,double eps) {\n'}
[4.304988] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.305065] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.305141] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.305217] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.305294] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.305370] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:706:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame&, const KDL::Frame&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.305451] (computed_torque) StderrLine: {'line': b'  706 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame& a,const Frame& b,double eps);\n'}
[4.305588] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.305666] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:149:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.305743] (computed_torque) StderrLine: {'line': b'  149 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame& a\x1b[m\x1b[K,const Frame& b,double eps=epsilon);\n'}
[4.305819] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.305894] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:781:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Twist&, const KDL::Twist&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.305978] (computed_torque) StderrLine: {'line': b'  781 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Twist& a,const Twist& b,double eps);\n'}
[4.306054] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.306130] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:150:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.306207] (computed_torque) StderrLine: {'line': b'  150 | inline bool Equal(\x1b[01;36m\x1b[Kconst Twist& a\x1b[m\x1b[K,const Twist& b,double eps=epsilon);\n'}
[4.306287] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.306363] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:944:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Wrench&, const KDL::Wrench&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.306444] (computed_torque) StderrLine: {'line': b'  944 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Wrench& a,const Wrench& b,double eps);\n'}
[4.306521] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.306596] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:151:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.306672] (computed_torque) StderrLine: {'line': b'  151 | inline bool Equal(\x1b[01;36m\x1b[Kconst Wrench& a\x1b[m\x1b[K,const Wrench& b,double eps=epsilon);\n'}
[4.306748] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.306823] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1037:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector2&, const KDL::Vector2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.306899] (computed_torque) StderrLine: {'line': b' 1037 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector2& a,const Vector2& b,double eps);\n'}
[4.306975] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.307052] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:152:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.307134] (computed_torque) StderrLine: {'line': b'  152 | inline bool Equal(\x1b[01;36m\x1b[Kconst Vector2& a\x1b[m\x1b[K,const Vector2& b,double eps=epsilon);\n'}
[4.307210] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.307286] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1089:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation2&, const KDL::Rotation2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.307363] (computed_torque) StderrLine: {'line': b' 1089 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation2& a,const Rotation2& b,double eps);\n'}
[4.307440] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.307516] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:153:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.307592] (computed_torque) StderrLine: {'line': b'  153 | inline bool Equal(\x1b[01;36m\x1b[Kconst Rotation2& a\x1b[m\x1b[K,const Rotation2& b,double eps=epsilon);\n'}
[4.307669] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.307744] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1130:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame2&, const KDL::Frame2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.307820] (computed_torque) StderrLine: {'line': b' 1130 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame2& a,const Frame2& b,double eps);\n'}
[4.307896] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.307972] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.308048] (computed_torque) StderrLine: {'line': b'  154 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame2& a\x1b[m\x1b[K,const Frame2& b,double eps=epsilon);\n'}
[4.308124] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.308200] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation&, const KDL::Rotation&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.308277] (computed_torque) StderrLine: {'line': b'  557 |     bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation& a,const Rotation& b,double eps=epsilon);\n'}
[4.308354] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.308430] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:547:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.308508] (computed_torque) StderrLine: {'line': b'  547 |      friend bool Equal(\x1b[01;36m\x1b[Kconst Rotation& a\x1b[m\x1b[K,const Rotation& b,double eps);\n'}
[4.308584] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.308665] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.308741] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.308817] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.308893] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.308974] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.309053] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector2&, const KDL::Vector2&, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.309137] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1048:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KEqual(const double&, const double&, double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.309215] (computed_torque) StderrLine: {'line': b' 1048 |         return (Equal(a.data[0],b.data[0],eps\x1b[01;31m\x1b[K)\x1b[m\x1b[K&&\n'}
[4.309292] (computed_torque) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.309368] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector&, const KDL::Vector&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.309445] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector& a,const Vector& b,double eps) {\n'}
[4.309561] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.309640] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.309717] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector& a\x1b[m\x1b[K,const Vector& b,double eps) {\n'}
[4.309793] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.309869] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1032:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame&, const KDL::Frame&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.309945] (computed_torque) StderrLine: {'line': b' 1032 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame& a,const Frame& b,double eps) {\n'}
[4.310020] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.310094] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1032:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.310170] (computed_torque) StderrLine: {'line': b' 1032 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Frame& a\x1b[m\x1b[K,const Frame& b,double eps) {\n'}
[4.310246] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.310321] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1042:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Twist&, const KDL::Twist&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.310402] (computed_torque) StderrLine: {'line': b' 1042 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Twist& a,const Twist& b,double eps) {\n'}
[4.310478] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.310553] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1042:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.310630] (computed_torque) StderrLine: {'line': b' 1042 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Twist& a\x1b[m\x1b[K,const Twist& b,double eps) {\n'}
[4.310706] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.310782] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1037:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Wrench&, const KDL::Wrench&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.310858] (computed_torque) StderrLine: {'line': b' 1037 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Wrench& a,const Wrench& b,double eps) {\n'}
[4.310934] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.311009] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1037:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.311084] (computed_torque) StderrLine: {'line': b' 1037 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Wrench& a\x1b[m\x1b[K,const Wrench& b,double eps) {\n'}
[4.311159] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.311234] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1047:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector2&, const KDL::Vector2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.311309] (computed_torque) StderrLine: {'line': b' 1047 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector2& a,const Vector2& b,double eps) {\n'}
[4.311384] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.311464] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1047:35:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.311542] (computed_torque) StderrLine: {'line': b' 1047 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector2& a\x1b[m\x1b[K,const Vector2& b,double eps) {\n'}
[4.311618] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.311694] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.311768] (-) TimerEvent: {}
[4.311884] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.312017] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.312103] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.312184] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1089:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation2&, const KDL::Rotation2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.312270] (computed_torque) StderrLine: {'line': b' 1089 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation2& a,const Rotation2& b,double eps);\n'}
[4.312348] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.312425] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:153:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.312503] (computed_torque) StderrLine: {'line': b'  153 | inline bool Equal(\x1b[01;36m\x1b[Kconst Rotation2& a\x1b[m\x1b[K,const Rotation2& b,double eps=epsilon);\n'}
[4.312580] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.312657] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1130:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame2&, const KDL::Frame2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.312733] (computed_torque) StderrLine: {'line': b' 1130 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame2& a,const Frame2& b,double eps);\n'}
[4.312809] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.312884] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.312960] (computed_torque) StderrLine: {'line': b'  154 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame2& a\x1b[m\x1b[K,const Frame2& b,double eps=epsilon);\n'}
[4.313035] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.313111] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation&, const KDL::Rotation&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.313187] (computed_torque) StderrLine: {'line': b'  557 |     bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation& a,const Rotation& b,double eps=epsilon);\n'}
[4.313264] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.313341] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:547:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.313418] (computed_torque) StderrLine: {'line': b'  547 |      friend bool Equal(\x1b[01;36m\x1b[Kconst Rotation& a\x1b[m\x1b[K,const Rotation& b,double eps);\n'}
[4.313524] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.313604] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.313681] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.313756] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.313831] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.313913] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.313988] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1049:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KEqual(const double&, const double&, double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.314064] (computed_torque) StderrLine: {'line': b' 1049 |                 Equal(a.data[1],b.data[1],eps\x1b[01;31m\x1b[K)\x1b[m\x1b[K   );\n'}
[4.314140] (computed_torque) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.314216] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector&, const KDL::Vector&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.314292] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector& a,const Vector& b,double eps) {\n'}
[4.314368] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.314444] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.314555] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector& a\x1b[m\x1b[K,const Vector& b,double eps) {\n'}
[4.314633] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.314715] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1032:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame&, const KDL::Frame&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.314793] (computed_torque) StderrLine: {'line': b' 1032 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame& a,const Frame& b,double eps) {\n'}
[4.314869] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.314944] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1032:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.315024] (computed_torque) StderrLine: {'line': b' 1032 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Frame& a\x1b[m\x1b[K,const Frame& b,double eps) {\n'}
[4.315099] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.315174] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1042:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Twist&, const KDL::Twist&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.315254] (computed_torque) StderrLine: {'line': b' 1042 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Twist& a,const Twist& b,double eps) {\n'}
[4.315330] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.315406] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1042:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.315487] (computed_torque) StderrLine: {'line': b' 1042 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Twist& a\x1b[m\x1b[K,const Twist& b,double eps) {\n'}
[4.315563] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.315639] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1037:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Wrench&, const KDL::Wrench&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.315716] (computed_torque) StderrLine: {'line': b' 1037 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Wrench& a,const Wrench& b,double eps) {\n'}
[4.315793] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.315869] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1037:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.315946] (computed_torque) StderrLine: {'line': b' 1037 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Wrench& a\x1b[m\x1b[K,const Wrench& b,double eps) {\n'}
[4.316022] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.316098] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1047:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector2&, const KDL::Vector2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.316175] (computed_torque) StderrLine: {'line': b' 1047 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector2& a,const Vector2& b,double eps) {\n'}
[4.316251] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.316326] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1047:35:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.316402] (computed_torque) StderrLine: {'line': b' 1047 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector2& a\x1b[m\x1b[K,const Vector2& b,double eps) {\n'}
[4.316478] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.316553] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.316629] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.316704] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.316780] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.316856] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1089:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation2&, const KDL::Rotation2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.316933] (computed_torque) StderrLine: {'line': b' 1089 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation2& a,const Rotation2& b,double eps);\n'}
[4.317009] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.317084] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:153:36:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.317165] (computed_torque) StderrLine: {'line': b'  153 | inline bool Equal(\x1b[01;36m\x1b[Kconst Rotation2& a\x1b[m\x1b[K,const Rotation2& b,double eps=epsilon);\n'}
[4.317240] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.317315] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1130:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame2&, const KDL::Frame2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.317394] (computed_torque) StderrLine: {'line': b' 1130 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame2& a,const Frame2& b,double eps);\n'}
[4.317485] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.317565] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.317642] (computed_torque) StderrLine: {'line': b'  154 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame2& a\x1b[m\x1b[K,const Frame2& b,double eps=epsilon);\n'}
[4.317718] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.317793] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation&, const KDL::Rotation&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.317876] (computed_torque) StderrLine: {'line': b'  557 |     bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation& a,const Rotation& b,double eps=epsilon);\n'}
[4.317953] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.318029] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:547:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.318106] (computed_torque) StderrLine: {'line': b'  547 |      friend bool Equal(\x1b[01;36m\x1b[Kconst Rotation& a\x1b[m\x1b[K,const Rotation& b,double eps);\n'}
[4.318186] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.318262] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.318337] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.318411] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.318486] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.318562] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.318638] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation2&, const KDL::Rotation2&, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.318714] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1053:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KEqual(const double&, const double&, double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.318796] (computed_torque) StderrLine: {'line': b' 1053 |     return ( Equal(a.c,b.c,eps\x1b[01;31m\x1b[K)\x1b[m\x1b[K && Equal(a.s,b.s,eps) );\n'}
[4.318873] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.318949] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector&, const KDL::Vector&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.319026] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector& a,const Vector& b,double eps) {\n'}
[4.319102] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.319179] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.319256] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector& a\x1b[m\x1b[K,const Vector& b,double eps) {\n'}
[4.319331] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.319407] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1032:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame&, const KDL::Frame&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.319482] (computed_torque) StderrLine: {'line': b' 1032 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame& a,const Frame& b,double eps) {\n'}
[4.319557] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.319631] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1032:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.319707] (computed_torque) StderrLine: {'line': b' 1032 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Frame& a\x1b[m\x1b[K,const Frame& b,double eps) {\n'}
[4.319782] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.319858] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1042:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Twist&, const KDL::Twist&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.319934] (computed_torque) StderrLine: {'line': b' 1042 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Twist& a,const Twist& b,double eps) {\n'}
[4.320011] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.320086] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1042:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.320170] (computed_torque) StderrLine: {'line': b' 1042 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Twist& a\x1b[m\x1b[K,const Twist& b,double eps) {\n'}
[4.320247] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.320322] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1037:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Wrench&, const KDL::Wrench&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.320402] (computed_torque) StderrLine: {'line': b' 1037 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Wrench& a,const Wrench& b,double eps) {\n'}
[4.320477] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.320552] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1037:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.320628] (computed_torque) StderrLine: {'line': b' 1037 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Wrench& a\x1b[m\x1b[K,const Wrench& b,double eps) {\n'}
[4.320703] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.320779] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1047:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector2&, const KDL::Vector2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.320860] (computed_torque) StderrLine: {'line': b' 1047 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector2& a,const Vector2& b,double eps) {\n'}
[4.320936] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.321012] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1047:35:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.321093] (computed_torque) StderrLine: {'line': b' 1047 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector2& a\x1b[m\x1b[K,const Vector2& b,double eps) {\n'}
[4.321169] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.321245] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1052:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation2&, const KDL::Rotation2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.321321] (computed_torque) StderrLine: {'line': b' 1052 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation2& a,const Rotation2& b,double eps) {\n'}
[4.321397] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.321501] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1052:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.321584] (computed_torque) StderrLine: {'line': b' 1052 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Rotation2& a\x1b[m\x1b[K,const Rotation2& b,double eps) {\n'}
[4.321659] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.321734] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.321809] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.321884] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.321959] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.322049] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1130:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame2&, const KDL::Frame2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.322181] (computed_torque) StderrLine: {'line': b' 1130 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame2& a,const Frame2& b,double eps);\n'}
[4.322310] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.322436] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.322563] (computed_torque) StderrLine: {'line': b'  154 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame2& a\x1b[m\x1b[K,const Frame2& b,double eps=epsilon);\n'}
[4.322658] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.322737] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation&, const KDL::Rotation&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.322816] (computed_torque) StderrLine: {'line': b'  557 |     bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation& a,const Rotation& b,double eps=epsilon);\n'}
[4.322893] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.322968] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:547:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.323051] (computed_torque) StderrLine: {'line': b'  547 |      friend bool Equal(\x1b[01;36m\x1b[Kconst Rotation& a\x1b[m\x1b[K,const Rotation& b,double eps);\n'}
[4.323128] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.323204] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.323280] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.323356] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.323432] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.323509] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.323586] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1053:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KEqual(const double&, const double&, double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.323663] (computed_torque) StderrLine: {'line': b' 1053 |     return ( Equal(a.c,b.c,eps) && Equal(a.s,b.s,eps\x1b[01;31m\x1b[K)\x1b[m\x1b[K );\n'}
[4.323740] (computed_torque) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.323816] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector&, const KDL::Vector&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.323894] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector& a,const Vector& b,double eps) {\n'}
[4.323969] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.324054] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1025:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.324131] (computed_torque) StderrLine: {'line': b' 1025 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector& a\x1b[m\x1b[K,const Vector& b,double eps) {\n'}
[4.324206] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.324281] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1032:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame&, const KDL::Frame&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.324363] (computed_torque) StderrLine: {'line': b' 1032 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame& a,const Frame& b,double eps) {\n'}
[4.324439] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.324515] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1032:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.324592] (computed_torque) StderrLine: {'line': b' 1032 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Frame& a\x1b[m\x1b[K,const Frame& b,double eps) {\n'}
[4.324669] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.324744] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1042:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Twist&, const KDL::Twist&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.324821] (computed_torque) StderrLine: {'line': b' 1042 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Twist& a,const Twist& b,double eps) {\n'}
[4.324897] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.324973] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1042:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.325050] (computed_torque) StderrLine: {'line': b' 1042 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Twist& a\x1b[m\x1b[K,const Twist& b,double eps) {\n'}
[4.325125] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.325199] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1037:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Wrench&, const KDL::Wrench&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.325274] (computed_torque) StderrLine: {'line': b' 1037 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Wrench& a,const Wrench& b,double eps) {\n'}
[4.325348] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.325423] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1037:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.325518] (computed_torque) StderrLine: {'line': b' 1037 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Wrench& a\x1b[m\x1b[K,const Wrench& b,double eps) {\n'}
[4.325594] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.325675] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1047:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Vector2&, const KDL::Vector2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.325751] (computed_torque) StderrLine: {'line': b' 1047 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Vector2& a,const Vector2& b,double eps) {\n'}
[4.325831] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.325907] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1047:35:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Vector2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.325985] (computed_torque) StderrLine: {'line': b' 1047 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Vector2& a\x1b[m\x1b[K,const Vector2& b,double eps) {\n'}
[4.326061] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.326136] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1052:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation2&, const KDL::Rotation2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.326212] (computed_torque) StderrLine: {'line': b' 1052 | IMETHOD bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation2& a,const Rotation2& b,double eps) {\n'}
[4.326287] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.326362] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1052:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.326438] (computed_torque) StderrLine: {'line': b' 1052 | IMETHOD bool Equal(\x1b[01;36m\x1b[Kconst Rotation2& a\x1b[m\x1b[K,const Rotation2& b,double eps) {\n'}
[4.326514] (computed_torque) StderrLine: {'line': b'      |                    \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.326590] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.326665] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.326741] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.326817] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.326893] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1130:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Frame2&, const KDL::Frame2&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.326974] (computed_torque) StderrLine: {'line': b' 1130 |      inline friend bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Frame2& a,const Frame2& b,double eps);\n'}
[4.327051] (computed_torque) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.327127] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:154:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Frame2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.327208] (computed_torque) StderrLine: {'line': b'  154 | inline bool Equal(\x1b[01;36m\x1b[Kconst Frame2& a\x1b[m\x1b[K,const Frame2& b,double eps=epsilon);\n'}
[4.327286] (computed_torque) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.327361] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:557:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool KDL::Equal(const KDL::Rotation&, const KDL::Rotation&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.327436] (computed_torque) StderrLine: {'line': b'  557 |     bool \x1b[01;36m\x1b[KEqual\x1b[m\x1b[K(const Rotation& a,const Rotation& b,double eps=epsilon);\n'}
[4.327512] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.327587] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.hpp:547:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst double\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst KDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.327663] (computed_torque) StderrLine: {'line': b'  547 |      friend bool Equal(\x1b[01;36m\x1b[Kconst Rotation& a\x1b[m\x1b[K,const Rotation& b,double eps);\n'}
[4.327739] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.327815] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.327891] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.327968] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.328044] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.328121] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.328196] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.328272] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1208:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid initialization of reference of type \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99 from expression of type \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.328348] (computed_torque) StderrLine: {'line': b' 1208 |  random(a[0]\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.328423] (computed_torque) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.328499] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin passing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.328580] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void random(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.328657] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.328733] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1209:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid initialization of reference of type \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99 from expression of type \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.328810] (computed_torque) StderrLine: {'line': b' 1209 |  random(a[1]\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.328885] (computed_torque) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.328961] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin passing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.329042] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void random(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.329118] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.329193] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1210:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid initialization of reference of type \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99 from expression of type \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.329271] (computed_torque) StderrLine: {'line': b' 1210 |  random(a[2]\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.329346] (computed_torque) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.329421] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin passing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.329513] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void random(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.329590] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.329665] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.329739] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1225:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.329814] (computed_torque) StderrLine: {'line': b' 1225 |  random(alfa\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.329890] (computed_torque) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.329965] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.330041] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.330118] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.330194] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.330277] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void random(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.330354] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.330430] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.330506] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.330581] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.330660] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.330736] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void random(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.330814] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.330889] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.330965] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.331042] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.331118] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.331196] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void random(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.331272] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.331348] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.331425] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.331501] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.331577] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.331655] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void random(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.331734] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.331810] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1226:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.331886] (computed_torque) StderrLine: {'line': b' 1226 |  random(beta\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.331961] (computed_torque) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.332037] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.332113] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.332188] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.332264] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.332341] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void random(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.332416] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.332492] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.332572] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.332648] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.332722] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.332799] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void random(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.332874] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.332949] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.333025] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.333099] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.333175] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.333252] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void random(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.333327] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.333403] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.333513] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.333594] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.333670] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.333747] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void random(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.333829] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.333905] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1227:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.333980] (computed_torque) StderrLine: {'line': b' 1227 |  random(gamma\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.334055] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.334129] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.334210] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.334285] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.334361] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.334441] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void random(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.334517] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.334593] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.334669] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.334745] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.334820] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.334898] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void random(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.334974] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.335054] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.335131] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.335206] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.335281] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.335357] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void random(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.335431] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.335508] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.335583] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.335660] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.335737] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.335814] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void random(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.335891] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.335966] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.336042] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1237:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid initialization of reference of type \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99 from expression of type \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.336119] (computed_torque) StderrLine: {'line': b' 1237 |  posrandom(a[0]\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.336199] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.336274] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin passing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.336350] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void posrandom(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.336424] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.336500] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1238:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid initialization of reference of type \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99 from expression of type \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.336576] (computed_torque) StderrLine: {'line': b' 1238 |  posrandom(a[1]\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.336651] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.336726] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin passing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.336803] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void posrandom(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.336878] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.336953] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1239:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid initialization of reference of type \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99 from expression of type \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.337029] (computed_torque) StderrLine: {'line': b' 1239 |  posrandom(a[2]\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.337105] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.337180] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin passing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.337256] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void posrandom(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.337337] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.337412] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.337509] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1254:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kposrandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.337588] (computed_torque) StderrLine: {'line': b' 1254 |  posrandom(alfa\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.337707] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.337843] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.337983] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.338093] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.338172] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.338259] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void posrandom(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.338335] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.338431] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.338575] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.338720] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.338864] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.338995] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void posrandom(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.339124] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.339268] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.339372] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.339494] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.339600] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.339680] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void posrandom(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.339755] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.339831] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.339907] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.339982] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.340056] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.340133] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void posrandom(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.340208] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.340285] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1255:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kposrandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.340363] (computed_torque) StderrLine: {'line': b' 1255 |  posrandom(beta\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.340450] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.340526] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.340602] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.340678] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.340754] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.340830] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void posrandom(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.340905] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.340981] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.341057] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.341132] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.341207] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.341284] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void posrandom(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.341359] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.341435] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.341559] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.341638] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.341714] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.341792] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void posrandom(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.341868] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.341949] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.342024] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.342103] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.342178] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.342257] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void posrandom(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.342332] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.342407] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1256:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kposrandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.342484] (computed_torque) StderrLine: {'line': b' 1256 |  posrandom(gamma\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.342559] (computed_torque) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.342636] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.342712] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.342788] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.342864] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.342940] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void posrandom(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.343015] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.343090] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.343166] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.343241] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.343316] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.343392] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void posrandom(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.343467] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.343542] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.343618] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.343693] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.343769] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.343846] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void posrandom(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.343922] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.343998] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.344081] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.344157] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.344232] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.344308] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void posrandom(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.344388] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.411913] (-) TimerEvent: {}
[4.512215] (-) TimerEvent: {}
[4.612510] (-) TimerEvent: {}
[4.623884] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/jntarray.hpp:26\x1b[m\x1b[K,\n'}
[4.624154] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainidsolver.hpp:27\x1b[m\x1b[K,\n'}
[4.624308] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainidsolver_recursive_newton_euler.hpp:25\x1b[m\x1b[K,\n'}
[4.624458] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chaindynparam.hpp:25\x1b[m\x1b[K,\n'}
[4.624609] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:46\x1b[m\x1b[K,\n'}
[4.624765] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.624930] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jacobian.hpp:\x1b[m\x1b[K At global scope:\n'}
[4.625074] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jacobian.hpp:32:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.625233] (computed_torque) StderrLine: {'line': b'   32 |     bool Equal(const Jacobian& a,const Jacobian& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.625377] (computed_torque) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.625584] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jacobian.hpp:32:63:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.625736] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.625893] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.626038] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.626183] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.626328] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.626470] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.626610] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.626762] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.626905] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.627051] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.627198] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.627344] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.650526] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainidsolver.hpp:27\x1b[m\x1b[K,\n'}
[4.650778] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainidsolver_recursive_newton_euler.hpp:25\x1b[m\x1b[K,\n'}
[4.650939] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chaindynparam.hpp:25\x1b[m\x1b[K,\n'}
[4.651092] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:46\x1b[m\x1b[K,\n'}
[4.651240] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.651387] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntarray.hpp:223:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.651535] (computed_torque) StderrLine: {'line': b'  223 |     bool Equal(const JntArray& src1,const JntArray& src2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.651681] (computed_torque) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.651833] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntarray.hpp:223:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.651983] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.652128] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.652273] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.652396] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.652528] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.652671] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.652790] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.652928] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.653068] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.653223] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.653369] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.653552] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.692822] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chaindynparam.hpp:27\x1b[m\x1b[K,\n'}
[4.693090] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:46\x1b[m\x1b[K,\n'}
[4.693253] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.693415] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntspaceinertiamatrix.hpp:226:95:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.693619] (computed_torque) StderrLine: {'line': b'  226 | SpaceInertiaMatrix& src1,const JntSpaceInertiaMatrix& src2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.693765] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.693889] (computed_torque) StderrLine: {'line': b'\n'}
[4.694023] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntspaceinertiamatrix.hpp:226:95:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.694173] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.694295] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.694432] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.694576] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.694722] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.694866] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.695013] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.695158] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.695306] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.695450] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.695595] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.695740] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.699045] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:27\x1b[m\x1b[K,\n'}
[4.699286] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.699444] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.699575] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.699700] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.699818] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected nested-name-specifier before \xe2\x80\x98\x1b[01m\x1b[KTI\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.699937] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  Rall1d(typename \x1b[01;31m\x1b[KTI\x1b[m\x1b[K<T>::Arg c)\n'}
[4.700053] (computed_torque) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[4.700173] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[4.700290] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  Rall1d(typename TI\x1b[01;31m\x1b[K<\x1b[m\x1b[KT>::Arg c)\n'}
[4.700406] (computed_torque) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.700522] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:71:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected nested-name-specifier before \xe2\x80\x98\x1b[01m\x1b[KTI\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.700640] (computed_torque) StderrLine: {'line': b'   71 |         INLINE Rall1d(typename \x1b[01;31m\x1b[KTI\x1b[m\x1b[K<T>::Arg tn, typename TI<V>::Arg afg):t(tn),grad(afg) {}\n'}
[4.700758] (computed_torque) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[4.700877] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:71:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[4.701003] (computed_torque) StderrLine: {'line': b'   71 |         INLINE Rall1d(typename TI\x1b[01;31m\x1b[K<\x1b[m\x1b[KT>::Arg tn, typename TI<V>::Arg afg):t(tn),grad(afg) {}\n'}
[4.701127] (computed_torque) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.701244] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:71:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int)\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.701377] (computed_torque) StderrLine: {'line': b'   71 |         INLINE \x1b[01;31m\x1b[KRall1d\x1b[m\x1b[K(typename TI<T>::Arg tn, typename TI<V>::Arg afg):t(tn),grad(afg) {}\n'}
[4.701555] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.701679] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.701805] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.701930] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.702661] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.702841] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:69:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kc\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.702968] (computed_torque) StderrLine: {'line': b'   69 |             {t=T(\x1b[01;31m\x1b[Kc\x1b[m\x1b[K);SetToZero(grad);}\n'}
[4.703107] (computed_torque) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.705283] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.705569] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:71:74:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktn\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kt\x1b[m\x1b[K\xe2\x80\x99?\n'}
[4.705755] (computed_torque) StderrLine: {'line': b'   71 | LINE Rall1d(typename TI<T>::Arg tn, typename TI<V>::Arg afg):t(\x1b[01;31m\x1b[Ktn\x1b[m\x1b[K),grad(afg) {}\n'}
[4.705920] (computed_torque) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[4.706076] (computed_torque) StderrLine: {'line': b'      |                                                                \x1b[32m\x1b[Kt\x1b[m\x1b[K\n'}
[4.707842] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:71:83:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kafg\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.708101] (computed_torque) StderrLine: {'line': b'   71 | (typename TI<T>::Arg tn, typename TI<V>::Arg afg):t(tn),grad(\x1b[01;31m\x1b[Kafg\x1b[m\x1b[K) {}\n'}
[4.708280] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[4.708450] (computed_torque) StderrLine: {'line': b'\n'}
[4.711513] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:\x1b[m\x1b[K At global scope:\n'}
[4.711799] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:469:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.712002] (computed_torque) StderrLine: {'line': b'  469 | E  bool Equal(const Rall1d<T,V,S>& y,const Rall1d<T,V,S>& x,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K)\n'}
[4.712183] (computed_torque) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.712337] (computed_torque) StderrLine: {'line': b'\n'}
[4.712489] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:469:77:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.712970] (-) TimerEvent: {}
[4.713997] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.714150] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.714237] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.714327] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.714405] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.714482] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.714558] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.714640] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.714716] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.714791] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.714872] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.714969] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.715234] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.715316] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.715392] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.715474] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.715550] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel KDL::diff(const doubleVel&, const doubleVel&, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.715626] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:39:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>::Rall1d(double, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.715702] (computed_torque) StderrLine: {'line': b'   39 |  return doubleVel((b.t-a.t)/dt,(b.grad-a.grad)/dt\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.716015] (computed_torque) StderrLine: {'line': b'      |                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.716125] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:27\x1b[m\x1b[K,\n'}
[4.716208] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.716295] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.716372] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.716447] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.716535] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(const KDL::Rall1d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.716794] (computed_torque) StderrLine: {'line': b'   73 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(const Rall1d<T,V,S>& r):t(r.t),grad(r.grad) {}\n'}
[4.716873] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.716950] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.717025] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.717101] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.717177] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.717253] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.717328] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.717564] (computed_torque) StderrLine: {'line': b'   59 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K() {}\n'}
[4.717656] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.717734] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[4.717810] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.717886] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.717960] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.718036] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.718111] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel KDL::addDelta(const doubleVel&, const doubleVel&, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.718260] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:43:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>::Rall1d(double, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.718415] (computed_torque) StderrLine: {'line': b'   43 |  return doubleVel(a.t+da.t*dt,a.grad+da.grad*dt\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.718494] (computed_torque) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.718571] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:27\x1b[m\x1b[K,\n'}
[4.718647] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.718732] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.718806] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.718887] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.719110] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(const KDL::Rall1d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.719194] (computed_torque) StderrLine: {'line': b'   73 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(const Rall1d<T,V,S>& r):t(r.t),grad(r.grad) {}\n'}
[4.719271] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.719345] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.719422] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.719498] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.719573] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.719648] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.719859] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.719950] (computed_torque) StderrLine: {'line': b'   59 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K() {}\n'}
[4.720027] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.720102] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[4.720178] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.720258] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.720334] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.720410] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.720635] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::doubleVel&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.720719] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:47:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.720806] (computed_torque) StderrLine: {'line': b'   47 |  random(F.t\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.720882] (computed_torque) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.720956] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.721030] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.721104] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.721178] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.721402] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.721501] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.721583] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.721660] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.721737] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.721815] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void random(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.721892] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.721972] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.722197] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.722281] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.722357] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.722436] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void random(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.722513] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.722596] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.722674] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.722877] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.722965] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.723043] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void random(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.723119] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.723199] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.723275] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.723351] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.723425] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.723573] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void random(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.723724] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.723802] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1231:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Frame&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.723884] (computed_torque) StderrLine: {'line': b' 1231 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Frame& F) {\n'}
[4.723959] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.724035] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1231:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.724146] (computed_torque) StderrLine: {'line': b' 1231 | IMETHOD void random(\x1b[01;36m\x1b[KFrame& F\x1b[m\x1b[K) {\n'}
[4.724271] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.724393] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.724518] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.724639] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.724762] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.724842] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:46:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::doubleVel&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.724919] (computed_torque) StderrLine: {'line': b'   46 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(doubleVel& F) {\n'}
[4.724995] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.725070] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:46:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.725149] (computed_torque) StderrLine: {'line': b'   46 | IMETHOD void random(\x1b[01;36m\x1b[KdoubleVel& F\x1b[m\x1b[K) {\n'}
[4.725225] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.725300] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:48:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.725381] (computed_torque) StderrLine: {'line': b'   48 |  random(F.grad\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.725472] (computed_torque) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.725554] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.725630] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.725706] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.725780] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.725855] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.725931] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.726005] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.726080] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.726154] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1207:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.726236] (computed_torque) StderrLine: {'line': b' 1207 | IMETHOD void random(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.726311] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.726387] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.726463] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.726538] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.726614] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1212:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.726691] (computed_torque) StderrLine: {'line': b' 1212 | IMETHOD void random(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.726766] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.726842] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.726918] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.726992] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.727067] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1216:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.727151] (computed_torque) StderrLine: {'line': b' 1216 | IMETHOD void random(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.727226] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.727301] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.727376] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.727451] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.727526] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1221:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.727601] (computed_torque) StderrLine: {'line': b' 1221 | IMETHOD void random(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.727676] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.727751] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1231:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::Frame&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.727831] (computed_torque) StderrLine: {'line': b' 1231 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(Frame& F) {\n'}
[4.727905] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.727979] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1231:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.728055] (computed_torque) StderrLine: {'line': b' 1231 | IMETHOD void random(\x1b[01;36m\x1b[KFrame& F\x1b[m\x1b[K) {\n'}
[4.728135] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.728210] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.728284] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.728359] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.728434] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.728508] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:46:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::random(KDL::doubleVel&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.728583] (computed_torque) StderrLine: {'line': b'   46 | IMETHOD void \x1b[01;36m\x1b[Krandom\x1b[m\x1b[K(doubleVel& F) {\n'}
[4.728658] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.728731] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:46:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.728810] (computed_torque) StderrLine: {'line': b'   46 | IMETHOD void random(\x1b[01;36m\x1b[KdoubleVel& F\x1b[m\x1b[K) {\n'}
[4.728889] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.728964] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::doubleVel&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.729040] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:51:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kposrandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.729116] (computed_torque) StderrLine: {'line': b'   51 |  posrandom(F.t\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.729192] (computed_torque) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.729267] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.729343] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.729422] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.729536] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.729644] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.729814] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.729945] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.730025] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.730101] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.730180] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void posrandom(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.730255] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.730331] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.730409] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.730485] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.730560] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.730637] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void posrandom(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.730712] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.730787] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.730863] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.730946] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.731020] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.731094] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void posrandom(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.731168] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.731242] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.731323] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.731398] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.731473] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.731549] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void posrandom(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.731624] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.731704] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1260:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Frame&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.731780] (computed_torque) StderrLine: {'line': b' 1260 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Frame& F) {\n'}
[4.731856] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.731931] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1260:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.732007] (computed_torque) StderrLine: {'line': b' 1260 | IMETHOD void posrandom(\x1b[01;36m\x1b[KFrame& F\x1b[m\x1b[K) {\n'}
[4.732081] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.732156] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.732230] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.732304] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.732378] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.732452] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:50:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::doubleVel&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.732527] (computed_torque) StderrLine: {'line': b'   50 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(doubleVel& F) {\n'}
[4.732606] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.732684] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:50:35:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.732762] (computed_torque) StderrLine: {'line': b'   50 | IMETHOD void posrandom(\x1b[01;36m\x1b[KdoubleVel& F\x1b[m\x1b[K) {\n'}
[4.732837] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.732912] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:52:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kposrandom(double&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.732989] (computed_torque) StderrLine: {'line': b'   52 |  posrandom(F.grad\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.733064] (computed_torque) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.733139] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frames.hpp:1261\x1b[m\x1b[K,\n'}
[4.733215] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/segment.hpp:26\x1b[m\x1b[K,\n'}
[4.733290] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chain.hpp:25\x1b[m\x1b[K,\n'}
[4.733364] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:44\x1b[m\x1b[K,\n'}
[4.733439] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.733535] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.733612] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Vector& a) {\n'}
[4.733709] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.733785] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1236:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Vector&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.733861] (computed_torque) StderrLine: {'line': b' 1236 | IMETHOD void posrandom(\x1b[01;36m\x1b[KVector& a\x1b[m\x1b[K) {\n'}
[4.733936] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.734011] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Twist&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.734088] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Twist& a) {\n'}
[4.734163] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.734238] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1241:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Twist&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.734315] (computed_torque) StderrLine: {'line': b' 1241 | IMETHOD void posrandom(\x1b[01;36m\x1b[KTwist& a\x1b[m\x1b[K) {\n'}
[4.734390] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.734471] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Wrench&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.734547] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Wrench& a) {\n'}
[4.734622] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.734697] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1245:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Wrench&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.734777] (computed_torque) StderrLine: {'line': b' 1245 | IMETHOD void posrandom(\x1b[01;36m\x1b[KWrench& a\x1b[m\x1b[K) {\n'}
[4.734852] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~^\x1b[m\x1b[K\n'}
[4.734927] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Rotation&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.735002] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Rotation& R) {\n'}
[4.735083] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.735160] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1250:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rotation&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.735237] (computed_torque) StderrLine: {'line': b' 1250 | IMETHOD void posrandom(\x1b[01;36m\x1b[KRotation& R\x1b[m\x1b[K) {\n'}
[4.735313] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.735390] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1260:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::Frame&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.735466] (computed_torque) StderrLine: {'line': b' 1260 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(Frame& F) {\n'}
[4.735542] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.735618] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frames.inl:1260:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::Frame&\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.735698] (computed_torque) StderrLine: {'line': b' 1260 | IMETHOD void posrandom(\x1b[01;36m\x1b[KFrame& F\x1b[m\x1b[K) {\n'}
[4.735773] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~^\x1b[m\x1b[K\n'}
[4.735849] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.735924] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.735999] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.736074] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.736149] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:50:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid KDL::posrandom(KDL::doubleVel&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.736228] (computed_torque) StderrLine: {'line': b'   50 | IMETHOD void \x1b[01;36m\x1b[Kposrandom\x1b[m\x1b[K(doubleVel& F) {\n'}
[4.736303] (computed_torque) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.736377] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:50:35:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[4.736455] (computed_torque) StderrLine: {'line': b'   50 | IMETHOD void posrandom(\x1b[01;36m\x1b[KdoubleVel& F\x1b[m\x1b[K) {\n'}
[4.736531] (computed_torque) StderrLine: {'line': b'      |                        \x1b[01;36m\x1b[K~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[4.736607] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:\x1b[m\x1b[K At global scope:\n'}
[4.736683] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:71:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.736760] (computed_torque) StderrLine: {'line': b'   71 | IMETHOD bool Equal(const VectorVel& r1,const VectorVel& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.736838] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.737121] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:71:71:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.737208] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.737286] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.737363] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.737438] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.737539] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.737618] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.737694] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.737770] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.737846] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.737923] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.738000] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.738075] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.738160] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.738239] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.738314] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.738390] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.738471] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:72:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.738547] (computed_torque) StderrLine: {'line': b'   72 | IMETHOD bool Equal(const Vector& r1,const VectorVel& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.738871] (computed_torque) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.739112] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:72:68:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.739352] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.739448] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.739549] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.739720] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.739856] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.739939] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.740018] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.740095] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.740210] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.740352] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.740497] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.740645] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.740773] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.740857] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.740946] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.741024] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.741133] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:73:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.741216] (computed_torque) StderrLine: {'line': b'   73 | IMETHOD bool Equal(const VectorVel& r1,const Vector& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.741293] (computed_torque) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.741394] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:73:68:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.741559] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.741701] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.741783] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.741860] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.741936] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.742012] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.742088] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.742164] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.742241] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.742316] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.742393] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.742479] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.742554] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.742629] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.742705] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.742785] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.742860] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:74:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.742942] (computed_torque) StderrLine: {'line': b'   74 | HOD bool Equal(const RotationVel& r1,const RotationVel& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.743023] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.743098] (computed_torque) StderrLine: {'line': b'\n'}
[4.743173] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:74:75:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.743249] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.743325] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.743401] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.743476] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.743551] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.743627] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.743702] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.743777] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.743851] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.743925] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.743999] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.744073] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.744148] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.744223] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.744587] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.744781] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.744939] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:75:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.745084] (computed_torque) StderrLine: {'line': b'   75 | METHOD bool Equal(const Rotation& r1,const RotationVel& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.745212] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.745335] (computed_torque) StderrLine: {'line': b'\n'}
[4.745454] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:75:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.745716] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.745839] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.745960] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.746081] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.746202] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.746324] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.746451] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.746574] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.746697] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.746822] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.746951] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.747073] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.747204] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.747326] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.747456] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.747595] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.747717] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:76:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.747839] (computed_torque) StderrLine: {'line': b'   76 | METHOD bool Equal(const RotationVel& r1,const Rotation& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.747961] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.748083] (computed_torque) StderrLine: {'line': b'\n'}
[4.748204] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:76:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.748326] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.748446] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.748569] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.748769] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.748967] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.749092] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.749214] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.749335] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.749471] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.749601] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.749739] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.749866] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.749983] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.750100] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.750221] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.750345] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.750472] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:77:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.750592] (computed_torque) StderrLine: {'line': b'   77 | IMETHOD bool Equal(const FrameVel& r1,const FrameVel& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.750710] (computed_torque) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.750829] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:77:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.750948] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.751065] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.751183] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.751301] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.751418] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.751534] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.751667] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.751786] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.751913] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.752039] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.752178] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.752429] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.752555] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.752683] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.752803] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.752926] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.753045] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:78:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.753164] (computed_torque) StderrLine: {'line': b'   78 | IMETHOD bool Equal(const Frame& r1,const FrameVel& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.753281] (computed_torque) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.753401] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:78:66:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.753529] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.753610] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.753688] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.753765] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.753840] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.753916] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.753992] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.754067] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.754154] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.754229] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.754305] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.754381] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.754455] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.754530] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.754605] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.754680] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.754755] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:79:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.754880] (computed_torque) StderrLine: {'line': b'   79 | IMETHOD bool Equal(const FrameVel& r1,const Frame& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.755017] (computed_torque) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.755188] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:79:66:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.755336] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.755414] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.755491] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.755566] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.755642] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.755728] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.755806] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.755882] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.755964] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.756041] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.756119] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.756200] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.756284] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.756360] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.756435] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.756511] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.756588] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:80:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.756663] (computed_torque) StderrLine: {'line': b'   80 | IMETHOD bool Equal(const TwistVel& a,const TwistVel& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.756739] (computed_torque) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.756814] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:80:67:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.756889] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.756964] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.757039] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.757115] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.757190] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.757266] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.757342] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.757418] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.757522] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.757600] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.757770] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.757851] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.757927] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.758003] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.758088] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.758164] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.758241] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:81:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.758318] (computed_torque) StderrLine: {'line': b'   81 | IMETHOD bool Equal(const Twist& a,const TwistVel& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.758394] (computed_torque) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.758470] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:81:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.758551] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.758628] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.758703] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.758780] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.758856] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.758932] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.759008] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.759091] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.759168] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.759244] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.759322] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.759409] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.759485] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.759560] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.759636] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.759713] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.759790] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:82:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.759871] (computed_torque) StderrLine: {'line': b'   82 | IMETHOD bool Equal(const TwistVel& a,const Twist& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.759947] (computed_torque) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.760022] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:82:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.760097] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.760181] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.760331] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.760408] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.760485] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.760562] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.760638] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.760714] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.760788] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.760861] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.760936] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.761010] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.761084] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:387\x1b[m\x1b[K,\n'}
[4.761158] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.761233] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.761309] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.761385] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.761493] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.inl:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel KDL::VectorVel::Norm() const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.761578] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.inl:320:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>::Rall1d(double&, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.761661] (computed_torque) StderrLine: {'line': b'  320 |     return doubleVel(n,dot(p,v)/n\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.761737] (computed_torque) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.761813] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:27\x1b[m\x1b[K,\n'}
[4.761888] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.761964] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.762038] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.762113] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.762188] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(const KDL::Rall1d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.762273] (computed_torque) StderrLine: {'line': b'   73 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(const Rall1d<T,V,S>& r):t(r.t),grad(r.grad) {}\n'}
[4.762348] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.762423] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.762504] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.762580] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.762655] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.762729] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.762810] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.762963] (computed_torque) StderrLine: {'line': b'   59 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K() {}\n'}
[4.763041] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.763116] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[4.763190] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:387\x1b[m\x1b[K,\n'}
[4.763265] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.763339] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.763412] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.763493] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.763569] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel KDL::dot(const KDL::VectorVel&, const KDL::VectorVel&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.763644] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.inl:358:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>::Rall1d(double, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.763721] (computed_torque) StderrLine: {'line': b'  358 |     return doubleVel(dot(lhs.p,rhs.p),dot(lhs.p,rhs.v)+dot(lhs.v,rhs.p)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.763797] (computed_torque) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.763872] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:27\x1b[m\x1b[K,\n'}
[4.763947] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.764022] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.764097] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.764172] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.764251] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(const KDL::Rall1d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.764327] (computed_torque) StderrLine: {'line': b'   73 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(const Rall1d<T,V,S>& r):t(r.t),grad(r.grad) {}\n'}
[4.764401] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.764474] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.764548] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.764622] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.764696] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.764770] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.764844] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.764919] (computed_torque) StderrLine: {'line': b'   59 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K() {}\n'}
[4.764994] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.765068] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[4.765151] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:387\x1b[m\x1b[K,\n'}
[4.765226] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.765300] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.765374] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.765453] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.765562] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel KDL::dot(const KDL::VectorVel&, const KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.765637] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.inl:361:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>::Rall1d(double, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.765713] (computed_torque) StderrLine: {'line': b'  361 |     return doubleVel(dot(lhs.p,rhs),dot(lhs.v,rhs)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.765788] (computed_torque) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.765863] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:27\x1b[m\x1b[K,\n'}
[4.765937] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.766012] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.766086] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.766163] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.766238] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(const KDL::Rall1d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.766314] (computed_torque) StderrLine: {'line': b'   73 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(const Rall1d<T,V,S>& r):t(r.t),grad(r.grad) {}\n'}
[4.766389] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.766463] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.766539] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.766622] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.766851] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.766933] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.767022] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.767100] (computed_torque) StderrLine: {'line': b'   59 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K() {}\n'}
[4.767176] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.767251] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[4.767326] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:387\x1b[m\x1b[K,\n'}
[4.767401] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.767475] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.767551] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.767627] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.767702] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleVel KDL::dot(const KDL::Vector&, const KDL::VectorVel&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.767787] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/framevel.inl:364:51:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<double>::Rall1d(double, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.768009] (computed_torque) StderrLine: {'line': b'  364 |     return doubleVel(dot(lhs,rhs.p),dot(lhs,rhs.v)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.768089] (computed_torque) StderrLine: {'line': b'      |                                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.768165] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/framevel.hpp:27\x1b[m\x1b[K,\n'}
[4.768253] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:26\x1b[m\x1b[K,\n'}
[4.768410] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.768492] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.768580] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.768656] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(const KDL::Rall1d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.768742] (computed_torque) StderrLine: {'line': b'   73 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(const Rall1d<T,V,S>& r):t(r.t),grad(r.grad) {}\n'}
[4.768819] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.769049] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.769146] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.769226] (computed_torque) StderrLine: {'line': b'   68 |         explicit INLINE  \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.769303] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.769379] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:68:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[4.769466] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall1d<T, V, S>::Rall1d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.769550] (computed_torque) StderrLine: {'line': b'   59 |         INLINE \x1b[01;36m\x1b[KRall1d\x1b[m\x1b[K() {}\n'}
[4.769625] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.769699] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall1d.h:59:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 2 provided\n'}
[4.769774] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:33\x1b[m\x1b[K,\n'}
[4.769849] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.769924] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.770143] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.770257] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.770339] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:\x1b[m\x1b[K At global scope:\n'}
[4.770424] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected nested-name-specifier before \xe2\x80\x98\x1b[01m\x1b[KTI\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.770501] (computed_torque) StderrLine: {'line': b'   64 |         explicit INLINE  Rall2d(typename \x1b[01;31m\x1b[KTI\x1b[m\x1b[K<T>::Arg c)\n'}
[4.770577] (computed_torque) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[4.770653] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[4.770730] (computed_torque) StderrLine: {'line': b'   64 |         explicit INLINE  Rall2d(typename TI\x1b[01;31m\x1b[K<\x1b[m\x1b[KT>::Arg c)\n'}
[4.770806] (computed_torque) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.770881] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:67:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected nested-name-specifier before \xe2\x80\x98\x1b[01m\x1b[KTI\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.771061] (computed_torque) StderrLine: {'line': b'   67 |         INLINE Rall2d(typename \x1b[01;31m\x1b[KTI\x1b[m\x1b[K<T>::Arg tn,const V& afg):t(tn),d(afg) {SetToZero(dd);}\n'}
[4.771237] (computed_torque) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[4.771312] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:67:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[4.771396] (computed_torque) StderrLine: {'line': b'   67 |         INLINE Rall2d(typename TI\x1b[01;31m\x1b[K<\x1b[m\x1b[KT>::Arg tn,const V& afg):t(tn),d(afg) {SetToZero(dd);}\n'}
[4.771470] (computed_torque) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.771545] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:67:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.771635] (computed_torque) StderrLine: {'line': b'   67 |         INLINE \x1b[01;31m\x1b[KRall2d\x1b[m\x1b[K(typename TI<T>::Arg tn,const V& afg):t(tn),d(afg) {SetToZero(dd);}\n'}
[4.771711] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.771792] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.772040] (computed_torque) StderrLine: {'line': b'   64 |         explicit INLINE  \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.772120] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.772196] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:69:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected nested-name-specifier before \xe2\x80\x98\x1b[01m\x1b[KTI\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.772279] (computed_torque) StderrLine: {'line': b'   69 |         INLINE Rall2d(typename \x1b[01;31m\x1b[KTI\x1b[m\x1b[K<T>::Arg tn,const V& afg,const V& afg2):t(tn),d(afg),dd(afg2) {}\n'}
[4.772355] (computed_torque) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[4.772429] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:69:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K<\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[4.772509] (computed_torque) StderrLine: {'line': b'   69 |         INLINE Rall2d(typename TI\x1b[01;31m\x1b[K<\x1b[m\x1b[KT>::Arg tn,const V& afg,const V& afg2):t(tn),d(afg),dd(afg2) {}\n'}
[4.772588] (computed_torque) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.772818] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:69:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.772894] (computed_torque) StderrLine: {'line': b'   69 |         INLINE \x1b[01;31m\x1b[KRall2d\x1b[m\x1b[K(typename TI<T>::Arg tn,const V& afg,const V& afg2):t(tn),d(afg),dd(afg2) {}\n'}
[4.772969] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.773043] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.773126] (computed_torque) StderrLine: {'line': b'   64 |         explicit INLINE  \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.773201] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.773277] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.773352] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:65:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kc\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.773440] (computed_torque) StderrLine: {'line': b'   65 |             {t=\x1b[01;31m\x1b[Kc\x1b[m\x1b[K;SetToZero(d);SetToZero(dd);}\n'}
[4.773705] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.773783] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.773865] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:67:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktn\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kt\x1b[m\x1b[K\xe2\x80\x99?\n'}
[4.773942] (computed_torque) StderrLine: {'line': b'   67 |         INLINE Rall2d(typename TI<T>::Arg tn,const V& afg):t(\x1b[01;31m\x1b[Ktn\x1b[m\x1b[K),d(afg) {SetToZero(dd);}\n'}
[4.774022] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[4.774097] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[32m\x1b[Kt\x1b[m\x1b[K\n'}
[4.774171] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:67:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kafg\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.774263] (computed_torque) StderrLine: {'line': b'   67 |   INLINE Rall2d(typename TI<T>::Arg tn,const V& afg):t(tn),d(\x1b[01;31m\x1b[Kafg\x1b[m\x1b[K) {SetToZero(dd);}\n'}
[4.774499] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[4.774576] (computed_torque) StderrLine: {'line': b'\n'}
[4.774650] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.774727] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:69:76:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktn\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kt\x1b[m\x1b[K\xe2\x80\x99?\n'}
[4.774804] (computed_torque) StderrLine: {'line': b'   69 |  Rall2d(typename TI<T>::Arg tn,const V& afg,const V& afg2):t(\x1b[01;31m\x1b[Ktn\x1b[m\x1b[K),d(afg),dd(afg2) {}\n'}
[4.774880] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[4.774956] (computed_torque) StderrLine: {'line': b'      |                                                              \x1b[32m\x1b[Kt\x1b[m\x1b[K\n'}
[4.775041] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:69:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kafg\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.775138] (computed_torque) StderrLine: {'line': b'   69 | l2d(typename TI<T>::Arg tn,const V& afg,const V& afg2):t(tn),d(\x1b[01;31m\x1b[Kafg\x1b[m\x1b[K),dd(afg2) {}\n'}
[4.775378] (computed_torque) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[4.775456] (computed_torque) StderrLine: {'line': b'\n'}
[4.775531] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:69:90:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kafg2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.775611] (computed_torque) StderrLine: {'line': b'   69 | l2d(typename TI<T>::Arg tn,const V& afg,const V& afg2):t(tn),d(afg),dd(\x1b[01;31m\x1b[Kafg2\x1b[m\x1b[K) {}\n'}
[4.775686] (computed_torque) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.775760] (computed_torque) StderrLine: {'line': b'\n'}
[4.775841] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:\x1b[m\x1b[K At global scope:\n'}
[4.776086] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:526:77:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.776175] (computed_torque) StderrLine: {'line': b'  526 | E  bool Equal(const Rall2d<T,V,S>& y,const Rall2d<T,V,S>& x,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K)\n'}
[4.776251] (computed_torque) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.776327] (computed_torque) StderrLine: {'line': b'\n'}
[4.776402] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:526:77:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.776478] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.776558] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.776636] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.776882] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.776961] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.777038] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.777114] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.777198] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.777273] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.777347] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.777428] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.777685] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.777764] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.777845] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.777921] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.777997] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.778072] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:48:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.778148] (computed_torque) StderrLine: {'line': b'   48 | IMETHOD bool Equal(const FrameAcc& r1,const FrameAcc& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.778223] (computed_torque) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.778298] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:48:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.778374] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.778450] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.778525] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.778600] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.778674] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.778749] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.778824] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.778898] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.778973] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.779048] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.779124] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.779199] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.779274] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.779349] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.779424] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.779499] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.779579] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:49:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.779659] (computed_torque) StderrLine: {'line': b'   49 | IMETHOD bool Equal(const Frame& r1,const FrameAcc& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.779734] (computed_torque) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.779808] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:49:66:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.779887] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.779961] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.780035] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.780109] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.780182] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.780256] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.780331] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.780409] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.780484] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.780560] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.780636] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.780712] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.780786] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.780861] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.780937] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.781011] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.781086] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:50:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.781160] (computed_torque) StderrLine: {'line': b'   50 | IMETHOD bool Equal(const FrameAcc& r1,const Frame& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.781239] (computed_torque) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.781313] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:50:66:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.781387] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.781490] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.781572] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.781648] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.781723] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.781800] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.781876] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.781952] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.782028] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.782104] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.782182] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.782258] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.782334] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.782409] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.782483] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.782557] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.782638] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:51:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.782713] (computed_torque) StderrLine: {'line': b'   51 | HOD bool Equal(const RotationAcc& r1,const RotationAcc& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.782788] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.782868] (computed_torque) StderrLine: {'line': b'\n'}
[4.782944] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:51:75:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.783019] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.783098] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.783173] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.783252] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.783329] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.783405] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.783481] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.783555] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.783630] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.783703] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.783776] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.783849] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.783923] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.783997] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.784071] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.784145] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.784220] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:52:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.784296] (computed_torque) StderrLine: {'line': b'   52 | METHOD bool Equal(const Rotation& r1,const RotationAcc& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.784370] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.784445] (computed_torque) StderrLine: {'line': b'\n'}
[4.784519] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:52:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.784594] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.784669] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.784743] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.784816] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.784894] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.784969] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.785043] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.785117] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.785191] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.785266] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.785341] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.785415] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.785543] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.785696] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.785862] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.785957] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.786036] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:53:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.786245] (computed_torque) StderrLine: {'line': b'   53 | METHOD bool Equal(const RotationAcc& r1,const Rotation& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.786458] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.786766] (computed_torque) StderrLine: {'line': b'\n'}
[4.786916] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:53:72:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.787007] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.787241] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.787366] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.787443] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.787520] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.787596] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.787676] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.787752] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.787827] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.787902] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.787978] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.788054] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.788128] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.788201] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.788274] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.788348] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.788422] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:54:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.788496] (computed_torque) StderrLine: {'line': b'   54 | IMETHOD bool Equal(const TwistAcc& a,const TwistAcc& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.788570] (computed_torque) StderrLine: {'line': b'      |                                                                   \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.788645] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:54:67:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.788719] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.788794] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.788868] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.788942] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.789017] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.789092] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.789167] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.789243] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.789323] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.789397] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.789485] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.789563] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.789637] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.789711] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.789791] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.789870] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.789945] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:55:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.790024] (computed_torque) StderrLine: {'line': b'   55 | IMETHOD bool Equal(const Twist& a,const TwistAcc& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.790099] (computed_torque) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.790173] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:55:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.790248] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.790322] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.790396] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.790469] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.790543] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.790617] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.790691] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.790766] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.790840] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.790914] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.790989] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.791072] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.791147] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.791221] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.791296] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.791371] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.791446] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:56:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.791521] (computed_torque) StderrLine: {'line': b'   56 | IMETHOD bool Equal(const TwistAcc& a,const Twist& b,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.791596] (computed_torque) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.791671] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:56:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.791745] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.791819] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.791894] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.791967] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.792040] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.792114] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.792187] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.792262] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.792336] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.792411] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.792490] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.792565] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.792640] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.792719] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.792794] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.792874] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.792949] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:57:71:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.793029] (computed_torque) StderrLine: {'line': b'   57 | IMETHOD bool Equal(const VectorAcc& r1,const VectorAcc& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.793104] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.793179] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:57:71:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.793254] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.793328] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.793401] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.793502] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.793582] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.793658] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.793733] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.793808] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.793884] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.793959] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.794035] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.794110] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.794184] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.794258] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.794333] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.794408] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.794483] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:58:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.794562] (computed_torque) StderrLine: {'line': b'   58 | IMETHOD bool Equal(const Vector& r1,const VectorAcc& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.794636] (computed_torque) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.794710] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:58:68:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.794784] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.794857] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.794931] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.795005] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.795080] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.795153] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.795227] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.795307] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.795381] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.795456] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.795531] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.795607] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.795686] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.795760] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.795834] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.795909] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.795987] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:59:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.796062] (computed_torque) StderrLine: {'line': b'   59 | IMETHOD bool Equal(const VectorAcc& r1,const Vector& r2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.796136] (computed_torque) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.796210] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:59:68:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.796291] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.796367] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.796442] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.796516] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.796591] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.796667] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.796742] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.796817] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.796890] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.796963] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.797037] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.797111] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.797185] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:267\x1b[m\x1b[K,\n'}
[4.797258] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.797331] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.797405] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.797493] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.797571] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleAcc KDL::dot(const KDL::VectorAcc&, const KDL::VectorAcc&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.797647] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.inl:141:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<double, double, double>::Rall2d(double, double, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.797724] (computed_torque) StderrLine: {'line': b'  141 |                     \x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.797799] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.797874] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:33\x1b[m\x1b[K,\n'}
[4.797949] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.798032] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.798107] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.798182] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.798257] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:72:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(const KDL::Rall2d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.798333] (computed_torque) StderrLine: {'line': b'   72 |         INLINE \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K(const Rall2d<T,V,S>& r):t(r.t),d(r.d),dd(r.dd) {}\n'}
[4.798406] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.798480] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:72:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 3 provided\n'}
[4.798555] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.798635] (computed_torque) StderrLine: {'line': b'   64 |         explicit INLINE  \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.798710] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.798784] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 3 provided\n'}
[4.798865] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:62:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.798941] (computed_torque) StderrLine: {'line': b'   62 |         INLINE \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K() {}\n'}
[4.799015] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.799090] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:62:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 3 provided\n'}
[4.799166] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:267\x1b[m\x1b[K,\n'}
[4.799240] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.799315] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.799390] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.799464] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.799538] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleAcc KDL::dot(const KDL::VectorAcc&, const KDL::Vector&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.799613] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.inl:148:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<double, double, double>::Rall2d(double, double, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.799693] (computed_torque) StderrLine: {'line': b'  148 |                     \x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.799767] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.799841] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:33\x1b[m\x1b[K,\n'}
[4.799916] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.799991] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.800067] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.800143] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.800217] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:72:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(const KDL::Rall2d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.800293] (computed_torque) StderrLine: {'line': b'   72 |         INLINE \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K(const Rall2d<T,V,S>& r):t(r.t),d(r.d),dd(r.dd) {}\n'}
[4.800368] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.800443] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:72:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 3 provided\n'}
[4.800518] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.800598] (computed_torque) StderrLine: {'line': b'   64 |         explicit INLINE  \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.800674] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.800749] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 3 provided\n'}
[4.800823] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:62:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.800899] (computed_torque) StderrLine: {'line': b'   62 |         INLINE \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K() {}\n'}
[4.800972] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.801045] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:62:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 3 provided\n'}
[4.801120] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:267\x1b[m\x1b[K,\n'}
[4.801194] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.801268] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.801343] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.801424] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.801537] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.inl:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[KKDL::doubleAcc KDL::dot(const KDL::Vector&, const KDL::VectorAcc&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.801615] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/frameacc.inl:155:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<double, double, double>::Rall2d(double, double, double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.801692] (computed_torque) StderrLine: {'line': b'  155 |                     \x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[4.801766] (computed_torque) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[4.801846] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/frameacc.hpp:33\x1b[m\x1b[K,\n'}
[4.801921] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:27\x1b[m\x1b[K,\n'}
[4.801994] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.802068] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.802142] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.802216] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:72:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(const KDL::Rall2d<T, V, S>&) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.802291] (computed_torque) StderrLine: {'line': b'   72 |         INLINE \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K(const Rall2d<T,V,S>& r):t(r.t),d(r.d),dd(r.dd) {}\n'}
[4.802365] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.802439] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:72:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 3 provided\n'}
[4.802513] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d(int) [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.802589] (computed_torque) StderrLine: {'line': b'   64 |         explicit INLINE  \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K(typename TI<T>::Arg c)\n'}
[4.802664] (computed_torque) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.802738] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:64:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 3 provided\n'}
[4.802813] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:62:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[KKDL::Rall2d<T, V, S>::Rall2d() [with T = double; V = double; S = double]\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.802889] (computed_torque) StderrLine: {'line': b'   62 |         INLINE \x1b[01;36m\x1b[KRall2d\x1b[m\x1b[K() {}\n'}
[4.802964] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[4.803046] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/utilities/rall2d.h:62:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 3 provided\n'}
[4.803565] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:29\x1b[m\x1b[K,\n'}
[4.803668] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.803755] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.803960] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.804050] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntarrayvel.hpp:\x1b[m\x1b[K At global scope:\n'}
[4.804125] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntarrayvel.hpp:33:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.804201] (computed_torque) StderrLine: {'line': b'   33 | bool Equal(const JntArrayVel& src1,const JntArrayVel& src2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.804276] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.804352] (computed_torque) StderrLine: {'line': b'\n'}
[4.804428] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntarrayvel.hpp:33:75:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.804503] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.804580] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.804654] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.804729] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.804804] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.804879] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.804954] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.805029] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.805112] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.805297] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.805494] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.805573] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.805648] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/kdl/chainfksolver.hpp:30\x1b[m\x1b[K,\n'}
[4.805733] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/kdl/chainfksolverpos_recursive.hpp:25\x1b[m\x1b[K,\n'}
[4.805808] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:48\x1b[m\x1b[K,\n'}
[4.805885] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.805961] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntarrayacc.hpp:34:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kepsilon\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[4.806036] (computed_torque) StderrLine: {'line': b'   34 | bool Equal(const JntArrayAcc& src1,const JntArrayAcc& src2,double eps=\x1b[01;31m\x1b[Kepsilon\x1b[m\x1b[K);\n'}
[4.806111] (computed_torque) StderrLine: {'line': b'      |                                                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.806186] (computed_torque) StderrLine: {'line': b'\n'}
[4.806262] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/kdl/jntarrayacc.hpp:34:75:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternatives:\n'}
[4.806338] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/math/policies/error_handling.hpp:22\x1b[m\x1b[K,\n'}
[4.806412] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/round.hpp:14\x1b[m\x1b[K,\n'}
[4.806485] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/time.h:58\x1b[m\x1b[K,\n'}
[4.806560] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/ros/ros.h:38\x1b[m\x1b[K,\n'}
[4.806633] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:5\x1b[m\x1b[K,\n'}
[4.806707] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.806780] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:247:31:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.806855] (computed_torque) StderrLine: {'line': b'  247 | inline BOOST_MATH_CONSTEXPR T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(BOOST_MATH_EXPLICIT_TEMPLATE_TYPE_SPEC(T)) BOOST_MATH_NOEXCEPT(T)\n'}
[4.806930] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.807005] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:181:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kboost::math::tools::detail::epsilon\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.807086] (computed_torque) StderrLine: {'line': b'  181 | inline T \x1b[01;36m\x1b[Kepsilon\x1b[m\x1b[K(const mpl::false_& BOOST_MATH_APPEND_EXPLICIT_TEMPLATE_TYPE(T))\n'}
[4.807162] (computed_torque) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.813082] (-) TimerEvent: {}
[4.818639] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.818864] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:81:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KState\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[4.819006] (computed_torque) StderrLine: {'line': b'   81 |                         const \x1b[01;31m\x1b[KState\x1b[m\x1b[K& desired_state,\n'}
[4.819110] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.820535] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:82:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KState\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[4.820744] (computed_torque) StderrLine: {'line': b'   82 |                         const \x1b[01;31m\x1b[KState\x1b[m\x1b[K& state_error );\n'}
[4.820856] (computed_torque) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.853421] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:159\x1b[m\x1b[K,\n'}
[4.853609] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[4.853697] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.hpp:76:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KState\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[4.853780] (computed_torque) StderrLine: {'line': b'   76 |                                               const \x1b[01;31m\x1b[KState\x1b[m\x1b[K& desired_state,\n'}
[4.853857] (computed_torque) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.855346] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.hpp:77:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KState\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[4.855631] (computed_torque) StderrLine: {'line': b'   77 |                                               const \x1b[01;31m\x1b[KState\x1b[m\x1b[K& state_error ){\n'}
[4.855914] (computed_torque) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[4.856001] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid controller_ns::computed_torque_controller_class::update(const ros::Time&, const ros::Duration&, const int&, const int&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.856094] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.hpp:88:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kacceleration\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kdesired_state\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.856176] (computed_torque) StderrLine: {'line': b'   88 |       desired.qdotdot(i) = desired_state.\x1b[01;31m\x1b[Kacceleration\x1b[m\x1b[K[i];\n'}
[4.856253] (computed_torque) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.856329] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.hpp:90:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kposition\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstate_error\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.856412] (computed_torque) StderrLine: {'line': b'   90 |       error.q(i) = state_error.\x1b[01;31m\x1b[Kposition\x1b[m\x1b[K[i];\n'}
[4.856488] (computed_torque) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.856563] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.hpp:91:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kvelocity\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstate_error\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.856639] (computed_torque) StderrLine: {'line': b'   91 |       error.qdot(i) = state_error.\x1b[01;31m\x1b[Kvelocity\x1b[m\x1b[K[i];\n'}
[4.856714] (computed_torque) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.913204] (-) TimerEvent: {}
[4.920504] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.hpp:118:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kif\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.920696] (computed_torque) StderrLine: {'line': b'  118 |         \x1b[01;31m\x1b[Kif\x1b[m\x1b[K(!std::isnan(command))\n'}
[4.920782] (computed_torque) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.013324] (-) TimerEvent: {}
[5.113606] (-) TimerEvent: {}
[5.213906] (-) TimerEvent: {}
[5.314210] (-) TimerEvent: {}
[5.414501] (-) TimerEvent: {}
[5.514796] (-) TimerEvent: {}
[5.615086] (-) TimerEvent: {}
[5.715380] (-) TimerEvent: {}
[5.809926] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/noetic/include/class_loader/class_loader_core.hpp:45\x1b[m\x1b[K,\n'}
[5.810099] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/class_loader/class_loader.hpp:46\x1b[m\x1b[K,\n'}
[5.810187] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/pluginlib/./class_list_macros.hpp:40\x1b[m\x1b[K,\n'}
[5.810269] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/noetic/include/pluginlib/class_list_macros.h:35\x1b[m\x1b[K,\n'}
[5.810346] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:2\x1b[m\x1b[K:\n'}
[5.810436] (computed_torque) StderrLine: {'line': b'/opt/ros/noetic/include/class_loader/meta_object.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[KB* class_loader::impl::MetaObject<C, B>::create() const [with C = controller_ns::computed_torque_controller_class; B = controller_interface::ControllerBase]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.810521] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/noetic/include/class_loader/meta_object.hpp:196:7:\x1b[m\x1b[K   required from here\n'}
[5.810595] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/noetic/include/class_loader/meta_object.hpp:198:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid new-expression of abstract class type \xe2\x80\x98\x1b[01m\x1b[Kcontroller_ns::computed_torque_controller_class\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.810670] (computed_torque) StderrLine: {'line': b'  198 |     return \x1b[01;31m\x1b[Knew C\x1b[m\x1b[K;\n'}
[5.810744] (computed_torque) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[5.810817] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[5.810893] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:75:11:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  because the following virtual functions are pure within \xe2\x80\x98\x1b[01m\x1b[Kcontroller_ns::computed_torque_controller_class\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.810981] (computed_torque) StderrLine: {'line': b'   75 |     class \x1b[01;36m\x1b[Kcomputed_torque_controller_class\x1b[m\x1b[K : public controller_interface::Controller<hardware_interface::EffortJointInterface> {\n'}
[5.811057] (computed_torque) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.811132] (computed_torque) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/noetic/include/controller_interface/controller.h:35\x1b[m\x1b[K,\n'}
[5.811207] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/include/computed_torque/computed_torque_controller.h:24\x1b[m\x1b[K,\n'}
[5.811289] (computed_torque) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/sheila/march/ros1/src/control/computed_torque/src/computed_torque_controller.cpp:5\x1b[m\x1b[K:\n'}
[5.811365] (computed_torque) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/noetic/include/controller_interface/controller_base.h:73:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\t\xe2\x80\x98\x1b[01m\x1b[Kvirtual void controller_interface::ControllerBase::update(const ros::Time&, const ros::Duration&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.811447] (computed_torque) StderrLine: {'line': b'   73 |   virtual void \x1b[01;36m\x1b[Kupdate\x1b[m\x1b[K(const ros::Time& time, const ros::Duration& period) = 0;\n'}
[5.811523] (computed_torque) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.815498] (-) TimerEvent: {}
[5.915790] (-) TimerEvent: {}
[6.016087] (-) TimerEvent: {}
[6.116375] (-) TimerEvent: {}
[6.208207] (computed_torque) StderrLine: {'line': b'make[2]: *** [CMakeFiles/computed_torque_lib.dir/build.make:63: CMakeFiles/computed_torque_lib.dir/src/computed_torque_controller.cpp.o] Error 1\n'}
[6.208532] (computed_torque) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:265: CMakeFiles/computed_torque_lib.dir/all] Error 2\n'}
[6.208731] (computed_torque) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[6.210932] (computed_torque) CommandEnded: {'returncode': 2}
[6.216515] (-) TimerEvent: {}
[6.317320] (-) TimerEvent: {}
[6.346715] (computed_torque) JobEnded: {'identifier': 'computed_torque', 'rc': 2}
[6.388861] (-) EventReactorShutdown: {}
